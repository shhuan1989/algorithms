{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11042&rd=14284",
	"statement":"You have advanced to Online Round 5 of the 2010 CodeTopper Open! There are N people competing in this round and the <b>k</b> highest scoring competitors will advance to the Onsite Semifinal Rounds. <br /><br /> <br /><br /> The competitors are numbered from 0 to N - 1. In Online Round 5, competitor i will score an integer point value between <b>worst</b>[i] and <b>best</b>[i], inclusive. Every integer point value in this range has the same probability. If two or more competitors get the same score, the lower-numbered competitors are preferred when determining the top <b>k</b>. <br /><br /> <br /><br /> After the <b>k</b> advancers are determined, they will be assigned to either Semifinal 1 or Semifinal 2. In order of increasing competitor number, the advancers are assigned to the Semifinal rounds in the following order: 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, ... Note that the scores of the advancers are not considered when determining the Semifinal assignment. <br /><br /> <br /><br /> Return a double[] containing 2N elements where the (2i+j)-th (1-based) element is the probability that competitor i is assigned to Semifinal j. ",
	"notes":[
		{
			"order":1,
			"val":"Each element of the returned value must have an absolute or relative error less than 1e-9."
		},
		{
			"order":2,
			"val":"You can assume that scores of the competitors are mutually independent uniform random variables."
		}
	],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"SemifinalAssignment",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getProbability",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int[], int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"double[]",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"double[] getProbability(int[] worst, int[] best, int k)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{ 1, 3, 1, 1, 1, 1 }",
			"id":0,
			"input":"{ 1, 0, 1, 1, 1, 1 }",
			"note":"There are two possible outcomes of this round:  ",
			"order":1
		},
		{
			"expect":"{ 12, 12, 12, 11 }",
			"id":0,
			"input":"{ 11, 11, 11, 10 }",
			"note":"Competitor 0 will fail to advance only when he/she scores 11 points and each of competitors 1 and 2 scores 12 points.",
			"order":2
		},
		{
			"expect":"{ 1000 }",
			"id":0,
			"input":"{ 0 }",
			"note":"This is a meaningless round. ",
			"order":3
		},
		{
			"expect":"{ 10, 9 }",
			"id":0,
			"input":"{ 1, 2 }",
			"note":"This is also meaningless because the assignment is based on competitor numbers, not on their scores. ",
			"order":4
		},
		{
			"expect":"{ 4, 5, 6, 4, 5, 6, 4, 5, 6 }",
			"id":0,
			"input":"{ 1, 1, 1, 2, 2, 2, 3, 3, 3 }",
			"order":5
		},
		{
			"expect":"{ 9, 7, 8, 9 }",
			"id":0,
			"input":"{ 1, 2, 5, 4 }",
			"order":6
		},
		{
			"expect":"{ 947, 773, 601, 544, 594, 399, 786, 954 }",
			"id":0,
			"input":"{ 3, 317, 25, 447, 96, 333, 361, 103 }",
			"order":7
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"worst will contain between 1 and 25 elements, inclusive. "
		},
		{
			"order":2,
			"val":"worst and best will contain the same number of elements. "
		},
		{
			"order":3,
			"val":"Each element of worst and best will be between 0 and 1,000, inclusive. "
		},
		{
			"order":4,
			"val":"For each index i, worst[i] will be less than or equal to best[i]. "
		},
		{
			"order":5,
			"val":"k will be between 1 and the number of elements in worst, inclusive. "
		}
	]
}