{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=7412&rd=10666",
	"statement":"<p> You are picking up your friend from the airport, and you just got a call - your friend's flight was delayed! You know exactly how long it will be in minutes before your friend will be ready to get picked up, and you want to drive around until that point in time, arriving at the airport at exactly that time. You want to find out how many ways there are to reach the airport in exactly that amount of time. </p> <p> The city layout is given as a String[] <b>adj</b>. The i<sup>th</sup> character of the j<sup>th</sup> element of <b>adj</b> is <tt>'.'</tt> if there is no road connecting intersection <tt>i</tt> to intersection <tt>j</tt> (both zero-indexed). If there is a road from intersection <tt>i</tt> to intersection <tt>j</tt>, the number of minutes it takes to travel that road is given as a number from <tt>'1'</tt> to <tt>'5'</tt>. Roads are not necessarily two-way, and two-way roads may not be the same speed both ways. You are at intersection <b>start</b> when you get your friend's call, and the airport is at intersection <b>finish</b>. Calculate the number of ways to get from intersection <b>start</b> to intersection <b>finish</b> in exactly <b>time</b> minutes. Since this number might be rather large, return the answer modulo 1000003. </p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"DrivingAround",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"numberOfWays",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[], int, int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int numberOfWays(String[] adj, int start, int finish, int time)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"0",
			"id":0,
			"input":"{\".12\", \"2.1\", \"12.\"}",
			"note":"There are 8 ways:  ",
			"order":1
		},
		{
			"expect":"2",
			"id":0,
			"input":"{\"....52....\", \"..5.......\", \"..........\", \".......1..\", \"......42.2\", \"5...4.....\", \".5...4...1\", \"......5...\", \".3244.....\", \"..........\"}",
			"note":"",
			"order":2
		},
		{
			"expect":"7",
			"id":0,
			"input":"{\"...14....1\", \"......13..\", \".2...4....\", \"....52.5..\", \"1.3..4....\", \".3....35.5\", \"4......1.1\", \"..4.4.1.54\", \"....4.11.5\", \"31144.2.4.\"}",
			"note":"",
			"order":3
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"adj will contain between 1 and 10 elements, inclusive."
		},
		{
			"order":2,
			"val":"The number of characters in each element of adj will be the same as the number of elements in adj."
		},
		{
			"order":3,
			"val":"Each character in adj will be a '.' or a digit between '1' and '5', inclusive."
		},
		{
			"order":4,
			"val":"start and finish will each be between 0 and n-1, inclusive, where n is the number of elements in adj."
		},
		{
			"order":5,
			"val":"The ith character of the ith element of adj will be '.', for all i."
		},
		{
			"order":6,
			"val":"time will be between 1 and 1000000000, inclusive."
		}
	]
}