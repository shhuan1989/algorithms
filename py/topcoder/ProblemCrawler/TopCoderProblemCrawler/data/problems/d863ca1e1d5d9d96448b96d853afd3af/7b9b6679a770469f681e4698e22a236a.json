{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11508&rd=14540",
	"statement":"Lecette is going to open an item shop. On the first day, she will sell only magical swords. She prepared <b>swords</b> magical swords and she will keep the shop open for the whole day, from 00:00 to 23:59. <br /><br /><br /><br /> Lecette has information about her customers. The information is given as String[] <b>customers</b>. Each element represents a single customer who may come to the shop at some point during the day. It is formatted as &quot;<i>T</i><sub>1</sub>,<i>C</i><sub>1</sub>,<i>P</i><sub>1</sub> <i>T</i><sub>2</sub>,<i>C</i><sub>2</sub>,<i>P</i><sub>2</sub> ... <i>T</i><sub><i>N</i></sub>,<i>C</i><sub><i>N</i></sub>,<i>P</i><sub><i>N</i></sub>&quot; (quotes for clarity), where <i>N</i> is a positive integer. An occurrence of three integers <i>T</i><sub><i>j</i></sub>, <i>C</i><sub><i>j</i></sub> and <i>P</i><sub><i>j</i></sub> within <b>customers</b>[<i>i</i>] means that the following event will happen with a probability of <i>P</i><sub><i>j</i></sub> percent: the <i>i</i>-th customer comes to the shop at <i>T</i><sub><i>j</i></sub> o'clock and offers to buy a magical sword at a price of <i>C</i><sub><i>j</i></sub> units of money. The same customer never comes to the shop more than once. That is, the customer does not come to the shop during the day with a probability of 100 - (<i>P</i><sub>1</sub> + <i>P</i><sub>2</sub> + ... + <i>P</i><sub><i>N</i></sub>) percent. The values of <i>T</i><sub><i>j</i></sub> are such that at most one customer can come to the shop during each hour of the day (see the constraints for further clarification). <br /><br /><br /><br /> When a customer comes to the shop, Lecette can choose to either accept or reject the offer. She cannot sell more than one sword to the same customer. Let's define <i>S</i> as the total amount of money that Lecette will get for all the swords sold during the day. Lecette will act in such a way that maximizes the expected value of <i>S</i>. Return this expected value. ",
	"notes":[{
		"order":1,
		"val":"The returned value must have an absolute or relative error less than 1e-9. "
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"NewItemShop",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getMaximum",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, String[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"double",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"double getMaximum(int swords, String[] customers)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{ \"8,1,80 16,100,11\", \"12,10,100\" }",
			"id":0,
			"input":"1",
			"note":"The optimal strategy is as follows: At 08:00, Lecette should not sell the sword even if the first customer comes to the shop. At 12:00, the second customer surely comes. Then,  By this strategy,  will be 10 (80%) or 100 (11%) or 0 (9%). ",
			"order":1
		},
		{
			"expect":"{ \"8,1,80 16,100,11\", \"12,10,100\" }",
			"id":0,
			"input":"2",
			"order":2
		},
		{
			"expect":"{ \"0,90,25 2,90,25 4,90,25 6,90,25\", \"7,100,80\" }",
			"id":0,
			"input":"1",
			"order":3
		},
		{
			"expect":"{ \"17,31,41 20,59,26 23,53,5\", \"19,89,79\", \"16,32,38 22,46,26\", \"18,43,38 21,32,7\" }",
			"id":0,
			"input":"3",
			"order":4
		},
		{
			"expect":"{ \"1,1,10\", \"2,2,9\", \"3,3,8\", \"4,4,7\", \"5,5,6\", \"6,6,5\", \"7,7,4\", \"8,8,3\", \"9,9,2\", \"10,10,1\" }",
			"id":0,
			"input":"5",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"swords will be between 1 and 24, inclusive. "
		},
		{
			"order":2,
			"val":"customers will contain between 1 and 24 elements, inclusive. "
		},
		{
			"order":3,
			"val":"Each element of customers will contain between 5 and 50 characters, inclusive. "
		},
		{
			"order":4,
			"val":"Each element of customers will be formatted as &quot;T1,C1,P1 T2,C2,P2 ... TN,CN,PN&quot;, where Each Tj, Cj and Pj will be nonnegative integers without extra leading zeros. "
		},
		{
			"order":5,
			"val":"Each Tj will be between 0 and 23, inclusive. "
		},
		{
			"order":6,
			"val":"Each Cj will be between 1 and 100, inclusive. "
		},
		{
			"order":7,
			"val":"Each Pj will be between 1 and 100, inclusive. "
		},
		{
			"order":8,
			"val":"For each t, 0 &lt;= t &lt; 24, there will be at most one pair (i, j) such that the value of Tj in customers[i] is equal to t. "
		},
		{
			"order":9,
			"val":"In each element of customers, T1 &lt; T2 &lt; ... &lt; TN will hold. "
		},
		{
			"order":10,
			"val":"In each element of customers, P1 + P2 + ... + PN will not exceed 100. "
		}
	]
}