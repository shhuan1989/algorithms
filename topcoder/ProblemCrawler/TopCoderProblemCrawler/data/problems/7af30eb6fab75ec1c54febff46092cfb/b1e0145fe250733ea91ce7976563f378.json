{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=4005&rd=6554",
	"statement":"You have a few very large files and they need to be sorted according to a total order that is defined for them. The only information you can use to sort them is the relative orders of pairs of files. Unfortunately, finding the relative order of a pair takes N*M minutes where N and M are the sizes of the two files being compared. Given the sizes of the files being sorted, your task is to find a comparison plan that guarantees you will find the correct order in the minimal amount of time. You should return that minimum.",
	"notes":[{
		"order":1,
		"val":"No two files are 'equal' -- one of them always belongs strictly after the other in the ordering."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"BasicSorting",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"minSortTime",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int minSortTime(int[] sizes)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 11",
			"id":0,
			"input":"{1,2,3}",
			"note":"With 3 files, you must compare all 3 pairs of files to figure out the order. The total time is thus 1*2 + 1*3 + 2*3 = 11 minutes.",
			"order":1
		},
		{
			"expect":"Returns: 5",
			"id":0,
			"input":"{1,1,1,1}",
			"note":"One way to do this is to find the order on three of the files, which takes 3 minutes. Then, compare the fourth file to the middle one of those three files. Finally, if the fourth file comes after the middle file, compare it to the last file, while if it comes before the fourth file, compare it to the first file.",
			"order":2
		},
		{
			"expect":"Returns: 12477",
			"id":0,
			"input":"{15,74,61,34,21}",
			"order":3
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"sizes will contain between 2 and 6 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of sizes will be between 1 and 100, inclusive."
		}
	]
}