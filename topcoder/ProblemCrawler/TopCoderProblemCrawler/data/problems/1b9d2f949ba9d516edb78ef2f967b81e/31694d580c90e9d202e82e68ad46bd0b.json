{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11288&rd=14537",
	"statement":"A sequence of positive integers is called a 'Fibonacci sequence' if each element of the sequence, except the first and the second elements, is the sum of its two direct previous elements. For example, the sequence (1, 1, 2, 3, 5, 8) is a Fibonacci sequence, as well as (4, 2, 6, 8, 14, 22). By convention, every sequence containing 0, 1, or 2 elements is considered to be a Fibonacci sequence. <br /><br /><br /><br /> There is a collection of positive integers represented by int[] <b>S</b>. Ash and Elsh would like to create a new sequence as follows: \n <ol> \n  <li>Ash will pick some integers (possibly none or all) from <b>S</b> to form a subsequence of a Fibonacci sequence. The elements in Ash's subsequence don't have to follow in the same relative order as in <b>S</b>.</li> \n  <li>Elsh will then perform the same action with the remaining integers of <b>S</b>.</li> \n  <li>The resulting sequence will be Ash's subsequence concatenated with Elsh's subsequence, in that order.</li> \n </ol> The whole process must be organized in such way that the resulting sequence is sorted in ascending order. In addition, they would like to create the new sequence with as many elements as possible. <br /><br /><br /><br /> Return the maximum possible number of integers that could be in the resulting sequence.",
	"notes":[{
		"order":1,
		"val":"A subsequence of a sequence is the result of removing some elements (possibly none or all) from the sequence, without changing the order of remaining elements."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"SubFibonacci",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"maxElements",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int maxElements(int[] S)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 5",
			"id":0,
			"input":"{8, 1, 20, 3, 10}",
			"note":"One possible solution is:  The resulting sequence is (1, 3, 8, 10, 20), containing 5 elements.",
			"order":1
		},
		{
			"expect":"Returns: 4",
			"id":0,
			"input":"{19, 47, 50, 58, 77, 99}",
			"note":"They can create a sorted sequence containing any 4 integers from .",
			"order":2
		},
		{
			"expect":"Returns: 1",
			"id":0,
			"input":"{512}",
			"note":"One possible solution is:  The resulting sequence is (512), containing 1 element.",
			"order":3
		},
		{
			"expect":"Returns: 7",
			"id":0,
			"input":"{3, 5, 7, 10, 13, 15, 20, 90}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 10",
			"id":0,
			"input":"{1, 2, 3, 5, 8, 13, 21, 34, 55, 89}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"S will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of S will be between 1 and 100,000,000, inclusive."
		},
		{
			"order":3,
			"val":"All elements of S will be distinct."
		}
	]
}