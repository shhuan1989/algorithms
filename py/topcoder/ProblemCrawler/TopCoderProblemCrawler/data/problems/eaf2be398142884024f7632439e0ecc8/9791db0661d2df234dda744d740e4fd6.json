{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=68&rd=2008",
	"statement":"<pre>Class Name:  TriTravel\nMethod Name:  bestWayDown\nParameters: int[]\nReturns: int\n\nImplement a class TriTravel, which contains a method bestWayDown.  The\nmethod analyzes a set of Integers organized as a triangle and finds the path\nfrom the top to the bottom of the triangle with the maximum possible sum of\nnumbers passed on route (including both the starting and ending number).  The\nmethod returns an int that is this maximum sum.  The method is passed an int[]\nthat contains the elements in the triangle.  The elements of the int[]\ncorrespond to the triangle as follows.  The numbers in this triangle are the\nindex of the elements in the int[]:\n        0\n      1     2\n    3     4     5\n  6     7     8     9\n10    11    .  .  .  .  . \n     .     .     .\n     .     .     .\n     .     .     .\nFor example, the triangle\n    1\n  6  7\n 4 -1 6\n5 8  9 0\nis represented by the int[]{1,6,7,4,-1,6,5,8,9,0}\nThe path starts at the element in the top row.  Each step in the path is\neither diagonally down one row to the right or diagonally down one row to the\nleft.  For instance, given the triangle above, the maximum sum route down is 1\n-&gt; 7 -&gt; 6 -&gt; 9 and the method returns the sum, 23.\n\nHere is the method signature:\npublic int bestWayDown(int[] triValues);\n*triValues is an int[] of elements between -100 and 100, inclusive.\n*The number of elements in triValues represents a triangle perfectly. (that is,\nit has 1 or 3 or 6 or 10 or 15 or ... elements).\n*triValues has at least 1 element (a 1 row triangle).\n*triValues has at most 45 elements (a 9 row triangle).\n\nExamples:\n*If triValues = {5, 4, 1, 2, 8, -1}, the path 5-&gt;4-&gt;8 yeilds the maximum sum\nand the method returns the sum: 17.</pre>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"TriTravel",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"bestWayDown",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int bestWayDown(int[] param0)",
			"order":5
		}
	],
	"examples":[],
	"constraints":[]
}