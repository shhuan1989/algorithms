{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12054&rd=14739",
	"statement":"You are given ints <b>n</b> and <b>z</b>. We have a regular <b>n</b>-gon: a convex polygon with <b>n</b> sides, in which all sides have the same length and all internal angles are equal. We want to draw (<b>n</b>-3) non-intersecting diagonals in some way. Once we do that, we will have the polygon divided into exactly (<b>n</b>-2) triangles. We want to produce a situation in which one of these (<b>n</b>-2) triangles has a strictly larger area than each of the remaining (<b>n</b>-3). <p></p> The vertices of the polygon are labeled 1 through <b>n</b> in clockwise order. Two sets of diagonals are different if one of them contains a diagonal that is not present in the other one. Count all sets of (<b>n</b>-3) non-intersecting diagonals that produce an arrangement with the above property. Return that count modulo <b>z</b>. ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"MaximalTriangle",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"howMany",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int howMany(int n, int z)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"1000000000",
			"id":0,
			"input":"4",
			"note":"There are two ways how to select a diagonal in a square. Each of them produces two triangles of equal size.",
			"order":1
		},
		{
			"expect":"100",
			"id":0,
			"input":"5",
			"note":"There are five ways how to select two non-intersecting diagonals in a regular pentagon. Each of them produces an arrangement in which one triangle has a larger area than each of the other two.",
			"order":2
		},
		{
			"expect":"1000003",
			"id":0,
			"input":"6",
			"note":"For a regular hexagon, some sets of diagonals produce a good set of triangles, and some do not.",
			"order":3
		},
		{
			"expect":"1000000000",
			"id":0,
			"input":"10",
			"note":"",
			"order":4
		},
		{
			"expect":"1000000000",
			"id":0,
			"input":"15",
			"note":"",
			"order":5
		},
		{
			"expect":"987654321",
			"id":0,
			"input":"100",
			"note":"",
			"order":6
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"n will be between 3 and 444, inclusive."
		},
		{
			"order":2,
			"val":"z will be between 1 and 1,000,000,000 (10^9), inclusive."
		}
	]
}