{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11809&rd=15091",
	"statement":"Fox Ciel has some pencils. Before she'll start writing her homework, she wants to place them into a mystic pattern for fun. Different pencils she has may have different lengths. You are given a int[] <b>len</b>. For each i, the length of i-th pencil is <b>len</b>[i] <br /><br /> <br /><br /> <br /><br /> The pattern she wants to create is called a k-gram. A k-gram is a pattern consisting of k rows, each of length k. There are only two types of valid rows: \n <ul> \n  <li>Yang: A row containing a single pencil of length k.</li> \n  <li>Yin: A row containing two pencils such that the sum of their lengths is (k-1). The pencils will be separated by a space of length 1.</li> \n </ul> <br /><br /> <br /><br /> <br /><br /> Compute and return the largest positive integer k such that Fox Ciel can use some of her pencils to form a k-gram. If she is unable to form any k-grams, return 0 instead.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"FoxAndKgram",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"maxK",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int maxK(int[] len)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 3",
			"id":0,
			"input":"{1,1,1,1,3}",
			"note":"All pencils can be used to form a 3-gram. One valid 3-gram follows: ",
			"order":1
		},
		{
			"expect":"Returns: 5",
			"id":0,
			"input":"{2,2,1,3,5,5,5}",
			"note":"One of the valid 5-grams: ",
			"order":2
		},
		{
			"expect":"Returns: 1",
			"id":0,
			"input":"{1}",
			"note":"",
			"order":3
		},
		{
			"expect":"Returns: 5",
			"id":0,
			"input":"{2,2,2,2,2,2,2,2,2,2}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 4",
			"id":0,
			"input":"{1,2,3,1,2,4,2,3,1}",
			"note":"Note that it is not necessary to use all of the pencils.",
			"order":5
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{2,3,5,7,11,13,17,19,23,29}",
			"note":"",
			"order":6
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"len will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element in len will be between 1 and 50, inclusive."
		}
	]
}