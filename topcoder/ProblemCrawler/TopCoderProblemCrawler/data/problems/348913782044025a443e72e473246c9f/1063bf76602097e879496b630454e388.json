{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11537&rd=14542",
	"statement":"Cat Taro has N cards. He arranged the cards in a row and wrote numbers 0 through N-1 on them from left to right. He wants to rearrange them so that <b>p</b>[i] is written on the i-th (0-indexed) card from the left. <br /><br /> <br /><br /> He asked N-1 rabbits to rearrange the cards. The rabbits are numbered from 0 to N-2, and the i-th rabbit can swap the i-th and the (i+1)-th card from the left. A permutation of rabbits q[0], ..., q[N-2] is called <i>good</i> if having the rabbits performed exactly their operations in this order, <b>p</b>[i] is written on the i-th card from the left. <br /><br /> <br /><br /> Return the number of <i>good</i> permutations of rabbits, modulo 1,000,000,007. ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"AdjacentSwaps",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"theCount",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int theCount(int[] p)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 1",
			"id":0,
			"input":"{1, 2, 0}",
			"note":"Initially {0, 1, 2} are written on the cards from left to right. There are two permutations of rabbits: ",
			"order":1
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{0, 1}",
			"note":"The rabbit must perform an operation.",
			"order":2
		},
		{
			"expect":"Returns: 2",
			"id":0,
			"input":"{2, 0, 3, 1}",
			"note":"",
			"order":3
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{1, 0, 3, 2}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 716743312",
			"id":0,
			"input":"{1, 3, 0, 5, 2, 7, 4, 8, 10, 6, 12, 9, 14, 11, 16, 13, 18, 15, 19, 17}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"p will contain between 2 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of p will be between 0 and N-1, inclusive, where N is the number of elements in p."
		},
		{
			"order":3,
			"val":"p will contain no duplicate elements."
		}
	]
}