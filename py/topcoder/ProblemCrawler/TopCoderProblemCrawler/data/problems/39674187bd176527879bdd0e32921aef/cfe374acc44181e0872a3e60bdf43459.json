{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11019&rd=14187",
	"statement":"Taro has prepared delicious kiwi fruit juice. He poured it into N bottles numbered from 0 to N-1. Each bottle has a capacity of <b>C</b> liters, and he poured <b>bottles</b>[i] liters of kiwi juice into the i-th bottle initially. Taro will sell these bottles after performing an arbitrary number of operations of the following type (possibly zero). In each operation, he chooses two distinct bottles A and B, and pours kiwi juice from bottle A to bottle B until either bottle A becomes empty or bottle B becomes full, whichever happens earlier. <br /><br /> <br /><br /> If a bottle contains x liters of kiwi juice at the end (where x is an integer between 0 and <b>C</b>, inclusive), then Taro can sell the bottle for <b>prices</b>[x] dollars. Return the maximum amount of money he can earn. <br /><br /> <br /><br />",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"KiwiJuice",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"theProfit",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int theProfit(int C, int[] bottles, int[] prices)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{5, 8}",
			"id":0,
			"input":"10",
			"note":"If Taro pours kiwi juice from bottle 0 to bottle 1, then bottle 0 will contain 3 liters of kiwi juice and bottle 1 will contain 10 liters of kiwi juice. He can sell bottle 1 for 10 dollars.",
			"order":1
		},
		{
			"expect":"{5, 8}",
			"id":0,
			"input":"10",
			"note":"Sell both bottles without pouring.",
			"order":2
		},
		{
			"expect":"{4, 5, 3, 7}",
			"id":0,
			"input":"10",
			"note":"It is possible that a bottle containing lesser juice is more expensive.",
			"order":3
		},
		{
			"expect":"{0}",
			"id":0,
			"input":"1",
			"note":"",
			"order":4
		},
		{
			"expect":"{2, 47, 24, 14, 0, 32, 9, 12, 31, 46, 39, 12, 16, 22, 29}",
			"id":0,
			"input":"49",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"C will be between 1 and 49, inclusive."
		},
		{
			"order":2,
			"val":"bottles will contain between 1 and 15 elements, inclusive."
		},
		{
			"order":3,
			"val":"Each element of bottles will be between 0 and C, inclusive."
		},
		{
			"order":4,
			"val":"prices will contain exactly C + 1 elements."
		},
		{
			"order":5,
			"val":"Each element of prices will be between 0 and 1,000,000, inclusive."
		}
	]
}