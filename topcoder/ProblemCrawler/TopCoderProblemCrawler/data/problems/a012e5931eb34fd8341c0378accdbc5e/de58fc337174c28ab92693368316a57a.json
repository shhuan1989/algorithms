{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=8596&rd=12007",
	"statement":"<p> The int[] <b>bag</b> describes a bag of non-negative integers. A bag is the same thing as a set, only it may contain repeated elements. The order of elements in a bag does not matter. </p> <p> Given two bags A and B, we say that A is a sub-bag of B if A can be obtained by erasing zero or more elements from B. </p> <p> The weight of a bag is the sum of its elements. </p> <p> Examples: <br /><br /> The bags (1,2,1,3,1) and (3,1,1,1,2) are the same, but different from the bag (1,2,3,3). <br /><br /> Bags (1,2) and (3,1,1) are sub-bags of the bag (1,2,1,3,1), but bag (1,2,2) is not. <br /><br /> The weight of the bag (1,2,1,3,1) is 1+2+1+3+1=8. </p> <p> Write a method that will compute how many sub-bags of <b>bag</b> have a prime weight. </p>",
	"notes":[
		{
			"order":1,
			"val":"A prime number is a positive integer with exactly two positive integer divisors."
		},
		{
			"order":2,
			"val":"Zero (0) and one (1) are not prime numbers."
		}
	],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"PrimeSums",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getCount",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"long",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"long getCount(int[] bag)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 5",
			"id":0,
			"input":"{1,1,2,7}",
			"note":" ",
			"order":1
		},
		{
			"expect":"Returns: 4",
			"id":0,
			"input":"{1,1,1,1,1,1,1,1,1,1}",
			"note":"This bag has eleven different sub-bags. Out of them four have prime weights (2, 3, 5, and 7).",
			"order":2
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{4,6,8,10,12,14}",
			"note":"The empty sub-bag has weight zero, and any other sub-bag has an even weight greater than 2.",
			"order":3
		},
		{
			"expect":"Returns: 54",
			"id":0,
			"input":"{1,2,4,8,16,32,64,128}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 97",
			"id":0,
			"input":"{1234,5678,9012,3456,7890,2345,6789,123,4567,8901}",
			"note":"",
			"order":5
		},
		{
			"expect":"Returns: 3",
			"id":0,
			"input":"{0,0,7}",
			"note":"",
			"order":6
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"bag will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element in bag will be between 0 and 10,000, inclusive."
		}
	]
}