{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11870&rd=14732",
	"statement":"Mrs. Jeipouju took part in a programming contest. One of the problems was as follows: <br /><br /> <br /><br /> <i>You are given an array A containing <b>N</b> integers. Each element of A is an integer between 0 and 9, inclusive. You are also given two arrays <b>Qfrom</b> and <b>Qto</b>, containing Q elements each. For each i, <b>Qfrom</b>[i] and <b>Qto</b>[i] describe the i-th query: you must take all elements of A with indices between <b>Qfrom</b>[i] and <b>Qto</b>[i], inclusive, and calculate their product modulo 10. Output exactly Q integers. The i-th number of the output must be the answer to the i-th query.</i> <br /><br /> <br /><br /> Mrs. Jeipouju made an input for this task by herself and generated the output using her program. However, she erased the array A by mistake - now she only knows int <b>N</b>, int[] <b>Qfrom</b>, int[] <b>Qto</b> and int[] <b>output</b> (<b>output</b>[i] is the i-th integer generated by her program). Return the number of possible arrays A, modulo 1,000,000,007. If there are no possible arrays A (i.e. her program is definitely wrong), return 0. ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"ProductQuery",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"theInput",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int[], int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int theInput(int N, int[] Qfrom, int[] Qto, int[] output)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{0}",
			"id":0,
			"input":"3",
			"note":"A[0] must be 5. A[1] and A[2] are arbitrary integers between 0 and 9.",
			"order":1
		},
		{
			"expect":"{0, 2, 0}",
			"id":0,
			"input":"5",
			"note":"Mrs. Jeipouju's program is definitely wrong.",
			"order":2
		},
		{
			"expect":"{0, 1}",
			"id":0,
			"input":"3",
			"note":"There are 4 possible inputs:  ",
			"order":3
		},
		{
			"expect":"{2, 0, 3, 6}",
			"id":0,
			"input":"8",
			"note":"",
			"order":4
		},
		{
			"expect":"{9, 6, 2, 3, 1, 3, 12, 3, 4, 6, 10, 18, 10, 11, 15, 5}",
			"id":0,
			"input":"20",
			"order":5
		},
		{
			"expect":"{5, 5}",
			"id":0,
			"input":"58",
			"note":"",
			"order":6
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"N will be between 1 and 100, inclusive."
		},
		{
			"order":2,
			"val":"Qfrom, Qto and output will contain the same number of elements."
		},
		{
			"order":3,
			"val":"Qfrom, Qto and output will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":4,
			"val":"Each element of Qfrom and Qto will be between 0 and N-1, inclusive."
		},
		{
			"order":5,
			"val":"For each i, Qto[i] will be greater than or equal to Qfrom[i]."
		},
		{
			"order":6,
			"val":"Each element of output will be between 0 and 9, inclusive."
		}
	]
}