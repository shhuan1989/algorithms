{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11364&rd=15037",
	"statement":"<p>Fox Jiro and Eel Saburo are good friends. One day Saburo found two interesting positive integers: A and B.</p> <br /><br /> <p>On the next day, Saburo met Jiro and wanted to tell him the two integers. However, he managed to forget their values. All Saburo could remember was their greatest common divisor <b>G</b> and their least common multiple <b>L</b>.</p> <br /><br /> <p>You are given two longs: <b>G</b> and <b>L</b>. Find the original integers A and B, and return the value of A+B. If there are multiple pairs of A and B that correspond to <b>G</b> and <b>L</b>, pick the one that minimizes A+B. If it is impossible to find such A and B (i.e., Saburo made a mistake somewhere), return -1.</p>",
	"notes":[
		{
			"order":1,
			"val":"The greatest common divisor of two integers  and  is the largest positive integer that divides both  and  without any remainder."
		},
		{
			"order":2,
			"val":"The least common multiple of two integers  and  is the smallest positive integer that is a multiple of both  and ."
		}
	],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"FoxAndGCDLCM",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"get",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"long, long",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"long",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"long get(long G, long L)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"20",
			"id":0,
			"input":"2",
			"note":"The possible pairs of A and B are {2, 20} and {4, 10}. We need to pick {4, 10} since 4+10 is the smallest sum of A and B.",
			"order":1
		},
		{
			"expect":"8",
			"id":0,
			"input":"5",
			"note":"There are no pairs of A and B such that their greatest common divisor is 5 and their least common multiple is 8.",
			"order":2
		},
		{
			"expect":"100",
			"id":0,
			"input":"1000",
			"note":"",
			"order":3
		},
		{
			"expect":"1000",
			"id":0,
			"input":"100",
			"note":"",
			"order":4
		},
		{
			"expect":"950863963000",
			"id":0,
			"input":"10",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"G will be between 1 and 1,000,000,000,000 (10^12), inclusive."
		},
		{
			"order":2,
			"val":"L will be between 1 and 1,000,000,000,000 (10^12), inclusive."
		}
	]
}