{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11739&rd=14722",
	"statement":"<p> Marvin plays a simple game. The game is played with an infinite supply of marbles and five bags, labeled &quot;bag 0&quot; through &quot;bag 4&quot;. </p> <p> At the beginning, Marvin takes <b>N</b> marbles (where <b>N</b> is a nonnegative integer) and places them into bag 0. The remaining four bags are left empty. Marvin then follows this simple algorithm: </p> <pre>\n    Add a marble into bag 1.\n    Repeat forever:\n        Add a marble into bag 1.\n        Empty bag 4.\n        While there are marbles in bag 0:\n            While there are marbles both in bag 0 and in bag 1:\n                Remove a marble from bag 0.\n                Remove a marble from bag 1.\n                Add a marble into bag 2.\n                Add a marble into bag 3.\n            End While\n            Add a marble into bag 4.\n            If bags 0 and 1 are both empty:\n                Move all marbles from bag 3 to bag 4.\n                TERMINATE THE GAME\n            End If\n            Move all marbles from bag 3 to bag 1.\n        End While\n        Move all marbles from bag 2 to bag 0.\n    End Repeat\n</pre> <p> You are given a long <b>N</b>. Count the number of times a marble enters a bag during Marvin's game. That is, compute X+Y, where X is the number of times a marble is added to some bag, and Y is the number of times a marble is moved from one bag to another. To avoid overflows, return just the value ((X+Y) modulo 1,000,000,009). If Marvin's game does not terminate for the given <b>N</b>, return -1 instead. </p>",
	"notes":[
		{
			"order":1,
			"val":"Suppose there are M marbles in bag A. The instruction \"\" then counts as M individual moves."
		},
		{
			"order":2,
			"val":"Note that  is allowed to be zero."
		}
	],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"MinskyMystery",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"computeAnswer",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"long",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int computeAnswer(long N)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 9",
			"id":0,
			"input":"2",
			"note":"",
			"order":1
		},
		{
			"expect":"Returns: 27",
			"id":0,
			"input":"3",
			"note":"",
			"order":2
		},
		{
			"expect":"Returns: 16",
			"id":0,
			"input":"4",
			"note":"",
			"order":3
		},
		{
			"expect":"Returns: 59058",
			"id":0,
			"input":"2401",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 86",
			"id":0,
			"input":"24",
			"order":5
		}
	],
	"constraints":[{
		"order":1,
		"val":"N will be between 0 and 10^12, inclusive."
	}]
}