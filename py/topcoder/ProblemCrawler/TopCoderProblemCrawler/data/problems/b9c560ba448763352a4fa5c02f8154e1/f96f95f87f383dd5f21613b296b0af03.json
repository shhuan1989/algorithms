{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11840&rd=14732",
	"statement":"Little Arthur has built a new fence around his house and now it is time to color it. <br /><br /><br /><br /> The fence consists of <b>N</b> planks numbered 0 to <b>N</b>-1 such that i-th plank is adjacent to planks i-1 and i+1 (modulo <b>N</b>) for all i between 0 and <b>N</b>-1, inclusive. <br /><br /><br /><br /> Each of the planks in the fence has to be colored using a single color. Different planks may have different colors. Each color is defined by three integer components: R, G, and B (meaning red, green, and blue, respectively), where 0 &lt;= R &lt; <b>maxR</b>, 0 &lt;= G &lt; <b>maxG</b>, and 0 &lt;= B &lt; <b>maxB</b>. Arthur can use any of the <b>maxR</b>*<b>maxG</b>*<b>maxB</b> possible colors. <br /><br /><br /><br /> Arthur likes random patterns. Therefore he has devised the following randomized method of coloring the fence: \n <ul> \n  <li>In the first step he colors plank 0 using the color with components <b>startR</b>, <b>startG</b>, <b>startB</b>.</li> \n  <li>Next, for each i from 1 to N-1, in this order, he does the following: He looks at the (already determined) color C of the plank (i-1). The color for plank i is chosen uniformly at random among all colors that make a good transition from the color C. (Good transitions are defined below.)</li> \n </ul> <br /><br /> A transition from color (R, G, B) to color (R', G', B') is called good if all components differ by at most <b>d2</b> units (formally, |R - R'| &lt;= <b>d2</b>, |G - G'| &lt;= <b>d2</b>, |B - B'| &lt;= <b>d2</b>) and at least one component differs by at least <b>d1</b> units (formally, at least one of the conditions |R - R'| &gt;= <b>d1</b>, |G - G'| &gt;= <b>d1</b>, |B - B'| &gt;= <b>d1</b> holds). Intuitively, a transition between two colors is called good if they are neither too similar, nor too different. <br /><br /><br /><br /> Unfortunately, Arthur hasn't realized that after coloring all planks the transition from plank (<b>N</b>-1) to plank 0 does not have to be good. (Note that the fence is cyclic and thus these two planks are adjacent.) If that happens, the fence will look ugly. <br /><br /><br /><br /> Given ints <b>N</b>, <b>maxR</b>, <b>maxG</b>, <b>maxB</b>, <b>startR</b>, <b>startG</b>, <b>startB</b>, <b>d1</b>, and <b>d2</b>, return the probability that the fence will be ugly. (I.e., the probability that the transition from the color of plank (<b>N</b>-1) to the color of plank 0 is not good.)",
	"notes":[
		{
			"order":1,
			"val":"Your return value must have an absolute or relative error less than 1e-9."
		},
		{
			"order":2,
			"val":"It is given that there exists at least one color that makes a good transition from the color (startR, startG, startB). Using this fact it can be proven that during the coloring process it is impossible to reach a state where there is no color that makes a good transition from the current plank's color. I.e. the coloring process cannot stop before coloring all the planks."
		}
	],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"RandomColoring",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getProbability",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int, int, int, int, int, int, int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"double",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"double getProbability(int N, int maxR, int maxG, int maxB, int startR, int startG, int startB, int d1, int d2)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"5",
			"id":0,
			"input":"2",
			"note":"In this test case there are only two planks. Plank 1 will surely be colored using a color that makes a good transition from the color of plank 0. By symmetry, the transition from plank 1 color to plank 0 color has to be good as well. The fence will never be ugly.",
			"order":1
		},
		{
			"expect":"5",
			"id":0,
			"input":"3",
			"note":"Only the R component can change here. There are nine ways how to color the planks 0, 1, and 2:  All of these ways are equally likely. In two of them the transition from the color of plank 2 to the color of plank 0 is not good. Thus the probability of having an ugly fence is 2/9.",
			"order":2
		},
		{
			"expect":"4",
			"id":0,
			"input":"7",
			"note":"As the number of planks is odd, Arthur will certainly have an ugly fence.",
			"order":3
		},
		{
			"expect":"7",
			"id":0,
			"input":"10",
			"note":"For any pair of colors the transition between them is good. The fence cannot be ugly.",
			"order":4
		},
		{
			"expect":"7",
			"id":0,
			"input":"10",
			"order":5
		},
		{
			"expect":"3",
			"id":0,
			"input":"3",
			"note":"",
			"order":6
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"N will be between 2 and 40, inclusive."
		},
		{
			"order":2,
			"val":"maxR, maxG, maxB, will be between 1 and 50, inclusive."
		},
		{
			"order":3,
			"val":"startR will be between 0 and maxR-1, inclusive."
		},
		{
			"order":4,
			"val":"startG will be between 0 and maxG-1, inclusive."
		},
		{
			"order":5,
			"val":"startB will be between 0 and maxB-1, inclusive."
		},
		{
			"order":6,
			"val":"d1 and d2 will be between 0 and 50, inclusive."
		},
		{
			"order":7,
			"val":"d1 will be less than or equal to d2."
		},
		{
			"order":8,
			"val":"It is guaranteed that there will exist at least one valid color that makes a good transition from color (startR, startG, startB)."
		}
	]
}