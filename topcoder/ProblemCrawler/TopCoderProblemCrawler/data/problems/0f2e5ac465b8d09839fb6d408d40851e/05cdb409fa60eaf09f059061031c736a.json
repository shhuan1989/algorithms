{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11149&rd=14238",
	"statement":"There is an N x M board divided into 1 x 1 cells. The rows of the board are numbered from 0 to N-1, and the columns are numbered from 0 to M-1. The cell located in row r and column c has coordinates (r, c). <br /><br /><br /><br /> In a coloring of the board, each cell on the board is colored white or black. A coloring is called <i>rectangle-avoiding</i> if it is impossible to choose 4 distinct cells of the same color so that their centers form a rectangle whose sides are parallel to the sides of the board. In other words, a coloring is rectangle-avoiding if, for each a, b, c, and d with 0 &lt;= a &lt; b &lt; N, 0 &lt;= c &lt; d &lt; M, there is at least one white cell and at least one black cell among the cells (a, c), (a, d), (b, c) and (b, d). <br /><br /><br /><br /> You are given a String[] <b>board</b> representing a board. The j-th character of the i-th element of <b>board</b> represents cell (i, j), and it can be 'W', 'B' or '?'. Here, 'W' indicates a white cell, 'B' indicates a black cell and '?' indicates an uncolored cell. For each uncolored cell, you may choose to color it either white or black. Return the number of different rectangle-avoiding colorings that can be achieved. If it is impossible to achieve a rectangle-avoiding coloring, return 0.",
	"notes":[
		{
			"order":1,
			"val":"Two colorings are different if there is a cell on the board that is colored white in one coloring and black in the other coloring."
		},
		{
			"order":2,
			"val":"The answer will always fit into a 64-bit signed integer data type."
		}
	],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"RectangleAvoidingColoring",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"count",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"long",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"long count(String[] board)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 14",
			"id":0,
			"input":"{\"??\", \"??\"}",
			"note":"Since each cell can be black or white, there are 2^4 = 16 ways to color this board. Of them, only 2 monochromatic colorings are not rectangle-avoiding, so the answer is 16 - 2 = 14.",
			"order":1
		},
		{
			"expect":"Returns: 3",
			"id":0,
			"input":"{\"B?\", \"?B\"}",
			"note":"It is the same board as in previous example, but colors for some cells are already predefined. There are 4 ways to color the remaining cells and in one of them the board becomes completely black. Therefore the answer is 4 - 1 = 3.",
			"order":2
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{\"WW\", \"WW\"}",
			"note":"This board is already colored and the coloring is not rectangle-avoiding.",
			"order":3
		},
		{
			"expect":"Returns: 12",
			"id":0,
			"input":"{\"??B??\", \"W???W\", \"??B??\"}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 16",
			"id":0,
			"input":"{\"??\", \"W?\", \"W?\", \"?W\", \"W?\"}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"board will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of board will contain between 1 and 50 characters, inclusive."
		},
		{
			"order":3,
			"val":"All elements of board will contain the same number of characters."
		},
		{
			"order":4,
			"val":"Each character in each element of board will be 'W', 'B' or '?'."
		}
	]
}