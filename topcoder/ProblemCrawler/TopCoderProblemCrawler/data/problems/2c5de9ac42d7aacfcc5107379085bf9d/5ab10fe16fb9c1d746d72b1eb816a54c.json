{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=4459&rd=6535",
	"statement":"<p>Hamming numbers were first introduced as an exercise by Richard W. Hamming, the creator of Hamming codes. By definition, a Hamming number is a positive number that can be factored as the product of some arbitrarily chosen factors. For example, if the chosen <b>factors</b> = {2,3,5} then 90 = 2*3*3*5 is a Hamming number, but 70 = 2*5*7 is not because it is also divisible by 7. Note that 1 is always a Hamming number no matter what the chosen factors are.</p> <p>Given a int[] of the chosen <b>factors</b> and an int <b>n</b>, return the n-th smallest Hamming number that can be obtained with these <b>factors</b>. <b>n</b> is 1-based, so the first number occurs when n = 1. If the result is above 2147483647 (32 bit signed integer maximum) then return -1.</p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"HammingNumbers",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getNumber",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int getNumber(int[] factors, int n)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"15",
			"id":0,
			"input":"{2,3,5}",
			"note":"The first 15 Hamming numbers generated by factors 2, 3 and 5 are: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 20, 24.",
			"order":1
		},
		{
			"expect":"11",
			"id":0,
			"input":"{2,2,2,4,4,4,8,8,8}",
			"note":"These numbers are all powers of 2. Thus the 11th Hamming number must be 2^10 = 1024.",
			"order":2
		},
		{
			"expect":"52",
			"id":0,
			"input":"{7,9,14,6}",
			"order":3
		},
		{
			"expect":"2841",
			"id":0,
			"input":"{4,11,15,21,29,28}",
			"note":"Watch out for overflow. This is the last number before we have to return -1.",
			"order":4
		},
		{
			"expect":"100000",
			"id":0,
			"input":"{2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89, 97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179, 181,191,193,197,199,211,223,227,229}",
			"note":"Factors contain the first 50 primes.",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"factors will contain between 1 and 50 elements inclusive."
		},
		{
			"order":2,
			"val":"Each element in factors will be between 2 and 300 inclusive."
		},
		{
			"order":3,
			"val":"n will be between 1 and 100000 inclusive."
		}
	]
}