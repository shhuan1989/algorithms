{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=10006&rd=13905",
	"statement":"The game &quot;Barons and Coins&quot; utilizes a customized chess board that can be much larger than the usual 8x8. The game involves the use of a special chess piece, the baron. Initially, a baron is placed on the top-left cell of the board (specified as x=0, y=0) and coins are placed by the other players on specific cells of the board. The objective of the game is to use the baron to capture as many coins as possible. A coin is considered captured when the player moves the baron to the cell where the coin has been placed.<br /><br /> <br /><br /> A baron's movement is as follows: In the first turn, the baron moves from its cell (x,y) to cell (x + K<sub>1</sub>, y + 1) such that K<sub>1</sub> is positive. After the first turn, the i-th move is specified as moving from current cell (x,y) to a new cell (x+K<sub>i</sub> , y+1) such that K<sub>i</sub> is strictly greater than K<sub>i-1</sub> . <br /><br /> <br /><br /> The coordinates of every coin are given in the int[] <b>x</b> and the int[] <b>y</b>, where the i-th coin is located on cell (<b>x</b>[i], <b>y</b>[i]). Return the maximum number of coins a player can capture.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"BaronsAndCoins",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getMaximum",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int getMaximum(int[] x, int[] y)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{4, 5, 6}",
			"id":0,
			"input":"{15, 5, 30}",
			"note":"The baron can move in this order to obtain the coins at (15,4) and (30,6): (0,0) -> (2,1) -> (5,2) -> (9,3) -> (15,4) -> (22,5) -> (30,6)",
			"order":1
		},
		{
			"expect":"{10}",
			"id":0,
			"input":"{10}",
			"note":"No valid sequence of baron movements can take the baron from (0,0) to (10,10).",
			"order":2
		},
		{
			"expect":"{1, 2, 3, 4, 5, 6}",
			"id":0,
			"input":"{1, 3, 6, 10, 15, 21}",
			"note":"",
			"order":3
		},
		{
			"expect":"{1, 1, 1, 2, 2, 2, 3, 3, 3}",
			"id":0,
			"input":"{5, 10, 15, 20, 25, 30, 35, 40, 45}",
			"note":"",
			"order":4
		},
		{
			"expect":"{1, 2, 3, 1, 2, 3, 4, 5}",
			"id":0,
			"input":"{1, 3, 6, 10, 22, 35, 50, 66}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"x will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"y will contain the same number of elements as x."
		},
		{
			"order":3,
			"val":"Each element of x will be between 1 and 10000, inclusive."
		},
		{
			"order":4,
			"val":"Each element of y will be between 1 and 10000, inclusive."
		},
		{
			"order":5,
			"val":"Each pair x[i], y[i] will be distinct."
		}
	]
}