{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=13343&rd=16050",
	"statement":"N lamps are arranged in a line. The lamps are numbered 0 through N-1 from left to right. <br /><br /> <br /><br /> You are given a String <b>init</b> describing the initial state of the lamps. If the i-th (0-based) character of <b>init</b> is '1', the lamp i is initially turned on. If the i-th character of <b>init</b> is '0', the lamp i is initially turned off. You are also given a int[] <b>a</b>. When the lamp i is turned on, the brightness of the lamp is <b>a</b>[i]. When the lamp i is turned off, the brightness of the lamp is zero. <br /><br /> <br /><br /> Toastman wants to maximize the total brightness of these lamps. He is allowed to toggle the states of some lamps according to the following rules: In each step, he can choose <b>K</b> consecutive lamps and toggle all their states. Return the largest possible total brightness Toastman can produce by making zero or more consecutive steps. ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"BrightLamps",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"maxBrightness",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String, int[], int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int maxBrightness(String init, int[] a, int K)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{3, 2, 4}",
			"id":0,
			"input":"\"011\"",
			"note":"The optimal solution is to toggle the states of the first two lamps. The total brightness will then be 3+0+4 = 7.",
			"order":1
		},
		{
			"expect":"{1, 1, 1, 3, 4, 3, 4, 5, 1, 5}",
			"id":0,
			"input":"\"0010100101\"",
			"note":"Here you can turn on all lamps.",
			"order":2
		},
		{
			"expect":"{5, 5, 3, 3, 4, 3, 5, 1, 1, 3}",
			"id":0,
			"input":"\"1111111111\"",
			"note":"You are allowed not to perform any operations.",
			"order":3
		},
		{
			"expect":"{8, 3, 10, 8, 3, 7, 4, 6, 3, 10}",
			"id":0,
			"input":"\"0010000001\"",
			"note":"In each optimal solution of this test case some lamps have to be toggled multiple times.",
			"order":4
		},
		{
			"expect":"{99, 29, 22, 50, 17, 49, 50, 54, 43, 29, 30, 33, 38, 53, 71, 48, 82, 25, 62, 93, 90, 64, 43, 95, 68, 35, 79, 11, 13, 47, 51, 44, 35, 55, 4, 34, 7, 10, 25, 38, 29, 58, 36, 34, 77, 90, 37, 58, 20, 20}",
			"id":0,
			"input":"\"00001001010101100001100000010000011001000000001011\"",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"init will contain between 1 and 2500 characters, inclusive."
		},
		{
			"order":2,
			"val":"Each character in init will be either '0' or '1'."
		},
		{
			"order":3,
			"val":"The number of elements in a will be the same as the number of characters in init."
		},
		{
			"order":4,
			"val":"Each element of a will be between 1 and 1000, inclusive."
		},
		{
			"order":5,
			"val":"K will be between 1 and the number of characters in init, inclusive."
		}
	]
}