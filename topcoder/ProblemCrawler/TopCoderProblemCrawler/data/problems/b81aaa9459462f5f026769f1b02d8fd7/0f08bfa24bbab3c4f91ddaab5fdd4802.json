{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12456&rd=15585",
	"statement":"John takes part in a regional olympiad in informatics together with other participants. At the contest each participant gains some nonnegative integer score. Each participant (except for John) is assigned to one of the N contest rooms (numbered from 0 to N-1) and John is the only contestant in the room number N. John has no idea how many participants are in the other rooms. For each of the other rooms he only knows the sum of scores of all participants in it. <br /><br /><br /><br /> You are given a int[] <b>sums</b> containing N elements and an int <b>k</b>. The i-th element of <b>sums</b> is the sum of participants' scores in the i-th contest room. Return the minimal score John has to gain to be sure that there are at most <b>k</b> participants with strictly higher scores. ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"TheOlympiadInInformatics",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"find",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int find(int[] sums, int k)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"0",
			"id":0,
			"input":"{4, 7, 0, 5}",
			"note":"John has to gain at least 7 points, because there might be a competitor with 7 points in room number 1 (0-based index).",
			"order":1
		},
		{
			"expect":"2",
			"id":0,
			"input":"{4, 7}",
			"note":"It is possible that there are three contestants who scored more than 2 points: there can be one in room 0 and two more in room 1. There can only be at most two contestants who scored more than 3 points: there can be at most one such contestant in each of the two rooms. (Note that the score of each contestant has to be an integer.) Therefore, John has to score at least 3 points. ",
			"order":2
		},
		{
			"expect":"1000000000",
			"id":0,
			"input":"{999999999}",
			"note":"Here it is enough to gain 0 points.",
			"order":3
		},
		{
			"expect":"70",
			"id":0,
			"input":"{95, 23, 87, 23, 82, 78, 59, 44, 12}",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"sums will contain between 1 and 47 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of sums will be between 0 and 1,000,000,000, inclusive."
		},
		{
			"order":3,
			"val":"k will be between 0 and 1,000,000,000, inclusive."
		}
	]
}