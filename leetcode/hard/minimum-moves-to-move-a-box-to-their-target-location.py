# -*- coding: utf-8 -*-

import math
import collections
import bisect
import heapq
import time
import random
import itertools
import sys

"""
created by shhuan at 2019/11/17 11:14

"""

from typing import List


class Solution:
    def minPushBox(self, grid: List[List[str]]) -> int:
        rp, cp, rb, cb, rt, ct = 0, 0, 0, 0, 0, 0
        n, m = len(grid), len(grid[0])

        for r in range(n):
            for c in range(m):
                if grid[r][c] == 'S':
                    rp, cp = r, c
                elif grid[r][c] == 'B':
                    rb, cb = r, c
                elif grid[r][c] == 'T':
                    rt, ct = r, c

        q = [(rp, cp, rb, cb)]
        heapq.heapify(q)
        vis = {(rp, cp, rb, cb)}
        step = 0
        while q:
            nq = []
            while q:
                rp, cp, rb, cb = q.pop()
                if rb == rt and cb == ct:
                    return step
                # move player
                ds = [(-1, 0), (1, 0), (0, -1), (0, 1)]
                for d in ds:
                    nrp, ncp = rp + d[0], cp + d[1]
                    if 0 <= nrp < n and 0 <= ncp < m and grid[nrp][ncp] != '#':
                        if nrp == rb and ncp == cb:
                            nrb, ncb = rb + d[0], cb + d[1]
                            if 0 <= nrb < n and 0 <= ncb < m and grid[nrb][ncb] != '#':
                                s = (nrp, ncp, nrb, ncb)
                                if s not in vis:
                                    vis.add(s)
                                    nq.append(s)

                        else:
                            s = (nrp, ncp, rb, cb)
                            if s not in vis:
                                vis.add(s)
                                q.append(s)
            q = nq
            step += 1

        return -1

s = Solution()
print(s.minPushBox(grid = [["#","#","#","#","#","#"],
             ["#","T","#","#","#","#"],
             ["#",".",".","B",".","#"],
             ["#",".","#","#",".","#"],
             ["#",".",".",".","S","#"],
             ["#","#","#","#","#","#"]]))
print(s.minPushBox(grid = [["#","#","#","#","#","#"],
             ["#","T","#","#","#","#"],
             ["#",".",".","B",".","#"],
             ["#","#","#","#",".","#"],
             ["#",".",".",".","S","#"],
             ["#","#","#","#","#","#"]]))
print(s.minPushBox(grid = [["#","#","#","#","#","#"],
             ["#","T",".",".","#","#"],
             ["#",".","#","B",".","#"],
             ["#",".",".",".",".","#"],
             ["#",".",".",".","S","#"],
             ["#","#","#","#","#","#"]]))
print(s.minPushBox(grid = [["#","#","#","#","#","#","#"],
             ["#","S","#",".","B","T","#"],
             ["#","#","#","#","#","#","#"]]))
print(s.minPushBox([["#",".",".","#","T","#","#","#","#"],
                    ["#",".",".","#",".","#",".",".","#"],
                    ["#",".",".","#",".","#","B",".","#"],
                    ["#",".",".",".",".",".",".",".","#"],
                    ["#",".",".",".",".","#",".","S","#"],
                    ["#",".",".","#",".","#","#","#","#"]]))

print(s.minPushBox