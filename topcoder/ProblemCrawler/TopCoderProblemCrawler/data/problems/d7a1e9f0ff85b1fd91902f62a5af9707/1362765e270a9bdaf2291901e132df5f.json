{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=6161&rd=10133",
	"statement":"<p> Dominoes is a fun game that requires 28 pieces, each representing a different pair of numbers between 0 and 6, inclusive. Since the pieces are reversible, (1,6) is the same piece as (6,1), and there is only one piece of the form (x,x) for each x. </p><p> The 28 pieces of dominoes are: </p><pre>\n  (0,6) (0,5) (0,4) (0,3) (0,2) (0,1) (0,0)\n  (1,6) (1,5) (1,4) (1,3) (1,2) (1,1)\n  (2,6) (2,5) (2,4) (2,3) (2,2)\n  (3,6) (3,5) (3,4) (3,3)\n  (4,6) (4,5) (4,4)\n  (5,6) (5,5)\n  (6,6)\n</pre><p> The problem with dominoes is that you need at least two people to play, so magazines have invented a game that you can play on your own. In a board with 7 columns and 8 rows there are numbers from 0 to 6, inclusive. The goal of the game is to divide the board into 28 2x1 rectangles in such a way that each part corresponds to one of the pieces and each piece is represented exactly once in the divided board. </p><p> When a magazine publishes an instance of the game (i.e., a board with the numbers), they want to ensure that it has a solution, and that the number of possible correct solutions is small so as to make the game more difficult. </p><p> Given the <b>board</b> as a String[] with each character representing a number between 0 and 6, return the number of correct solutions that <b>board</b> has. </p> ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"DominoesFinding",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getPossibilities",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int getPossibilities(String[] board)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 60",
			"id":0,
			"input":"{\"0000000\", \"0123456\", \"1111112\", \"1234562\", \"2222333\", \"3456345\", \"3444556\", \"6456566\"}",
			"note":"",
			"order":1
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{\"1111111\",\"1111111\",\"1111111\",\"1111111\",\"1111111\",\"1111111\",\"1111111\",\"1111111\"}",
			"note":"No way!",
			"order":2
		},
		{
			"expect":"Returns: 1",
			"id":0,
			"input":"{\"0054450\", \"6645056\", \"0151226\", \"6522303\", \"0246343\", \"6411432\", \"0324531\", \"6215131\"}",
			"note":"Only one way to solve this one. ",
			"order":3
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"board will contain exactly 8 elements."
		},
		{
			"order":2,
			"val":"Each element of board will contain exactly 7 characters."
		},
		{
			"order":3,
			"val":"Each character of each element of board will be a domino digit ('0'-'6')."
		}
	]
}