{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11781&rd=14726",
	"statement":"The Casket of Star (sic) is a device in the Touhou universe. Its purpose is to generate energy rapidly. Initially it contains n stars in a row. The stars are labeled 0 through n-1 from the left to the right. You are given a int[] <b>weight</b>, where <b>weight</b>[i] is the weight of star i. <br /><br /> <br /><br /> <br /><br /> The following operation can be repeatedly used to generate energy: \n <ol> \n  <li>Choose a star x other than the very first star and the very last star.</li> \n  <li>The x-th star disappears.</li> \n  <li>This generates <b>weight</b>[x-1] * <b>weight</b>[x+1] units of energy.</li> \n  <li>We decrease n and relabel the stars 0 through n-1 from the left to the right.</li> \n </ol> <br /><br /> <br /><br /> <br /><br /> Your task is to use the device to generate as many units of energy as possible. Return the largest possible total amount of generated energy.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"CasketOfStar",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"maxEnergy",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int maxEnergy(int[] weight)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 12",
			"id":0,
			"input":"{1,2,3,4}",
			"note":"We have only 2 choices:  So the answer is 12.",
			"order":1
		},
		{
			"expect":"Returns: 10400",
			"id":0,
			"input":"{100,2,1,3,100}",
			"note":"We proceed as follows: {100,2,1,3,100} => {100,1,3,100} => {100,3,100} => {100,100} The total energy is 100*1 + 100*3 + 100*100 = 10400.",
			"order":2
		},
		{
			"expect":"Returns: 1818",
			"id":0,
			"input":"{2,2,7,6,90,5,9}",
			"note":"",
			"order":3
		},
		{
			"expect":"Returns: 2937051",
			"id":0,
			"input":"{477,744,474,777,447,747,777,474}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 13",
			"id":0,
			"input":"{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"weight will contain between 3 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element in weight will be between 1 and 1,000, inclusive."
		}
	]
}