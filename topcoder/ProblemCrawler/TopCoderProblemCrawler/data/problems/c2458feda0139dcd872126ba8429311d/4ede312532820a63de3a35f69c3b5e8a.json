{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=10541&rd=15851",
	"statement":"A directed acyclic graph is a <i>family graph</i> if the following constraints are all satisfied: \n <ul> \n  <li>The nodes of the graph are numbered 0 through N-1, for some positive N.</li> \n  <li>Each node is either male or female.</li> \n  <li>Each node either has no parents, or it has precisely two parents. (A parent of the node x is a node y such that there is an edge from y to x.)</li> \n  <li>If a node has parents, their numbers are strictly smaller than the number of the node.</li> \n  <li>If a node has parents, one of them must be male and the other female.</li> \n </ul> <br /><br /> You are given two int[]s <b>parent1</b> and <b>parent2</b> with N elements each. These describe one directed graph that resembles a family graph: For each i, node i has either two parents (in which case <b>parent1</b>[i] and <b>parent2</b>[i] are their numbers, and both of them are smaller than i), or it has no parents (in which case <b>parent1</b>[i] and <b>parent2</b>[i] are both -1). <br /><br /><br /><br /> Return &quot;Possible&quot; (quotes for clarity) if the given graph can be a family graph, and &quot;Impossible&quot; otherwise.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"Family",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"isFamily",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"String",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"String isFamily(int[] parent1, int[] parent2)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{-1,-1,1}",
			"id":0,
			"input":"{-1,-1,0}",
			"note":"The parents of node 2 are nodes 0 and 1. Nodes 0 and 1 have no parents.",
			"order":1
		},
		{
			"expect":"{-1,-1,-1,-1,-1}",
			"id":0,
			"input":"{-1,-1,-1,-1,-1}",
			"note":"Nobody has any parents.",
			"order":2
		},
		{
			"expect":"{-1,-1,1,2,2}",
			"id":0,
			"input":"{-1,-1,0,0,1}",
			"note":"Given that 0 and 1 have a child, their genders must be different. Given that 0 and 2 have a child, their genders must be different, too. Then, 1 and 2 must have the same gender, hence they cannot have a child together. Therefore, this cannot be a valid family graph.",
			"order":3
		},
		{
			"expect":"{-1,-1,-1,-1,3,-1,4,6,5,-1,5,4,6,1} ",
			"id":0,
			"input":"{-1,-1,-1,-1,1,-1,0,5,6,-1,0,3,8,6} ",
			"note":"",
			"order":4
		},
		{
			"expect":"{-1,-1,-1,1,0,-1,1,4,2,0,4,8,2,3,0,5,14,14,-1,7,-1,13}",
			"id":0,
			"input":"{-1,-1,-1,2,2,-1,5,6,4,6,2,1,8,0,2,4,6,9,-1,16,-1,11}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"parent1 will contain between 1 and 100 elements, inclusive."
		},
		{
			"order":2,
			"val":"parent1 and parent2 will contain the same number of elements."
		},
		{
			"order":3,
			"val":"For each i, the i-th element (0-based) of parent1 will be between -1 and i-1, inclusive."
		},
		{
			"order":4,
			"val":"For each i, the i-th element (0-based) of parent2 will be between -1 and i-1, inclusive."
		},
		{
			"order":5,
			"val":"For each i, the i-th element of parent1 will be -1 if and only if the i-th element of parent2 is -1."
		},
		{
			"order":6,
			"val":"For each i, if the i-th element of parent1 is not -1, then the i-th element of parent1 and the i-th element of parent2 will be different."
		}
	]
}