{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12523&rd=15499",
	"statement":"Bob is using a peculiar text editor to write a sequence of lines of text. The editor consists of three parts: a results window, a text buffer and an undo history. More details about the three parts follow. \n <ul> \n  <li>The results window contains a sequence of strings: the lines of text you already wrote. Initially, the results window is empty.</li> \n  <li>The text buffer contains a string: the line you are writing at the moment. Initially, the string in the text buffer is empty.</li> \n  <li>The undo history contains a sequence of strings: all the past states of the text buffer. Initially, the undo history contains a single element: an empty string.</li> \n </ul> You are given a String[] <b>lines</b>. Bob would like to print the contents of <b>lines</b> into the results window. (At the end, the sequence of strings stored in the results window must be precisely equal to <b>lines</b>. Order of elements matters.) Additionally, Bob would like to do so as quickly as possible. He is able to take the following actions: \n <ul> \n  <li>Bob may type a lowercase letter. The letter is appended to the text buffer. The new text buffer is then added as a new element of the undo history. (For example, if the text buffer currently contains &quot;do&quot;, then pressing 'g' changes the text buffer to &quot;dog&quot; and then stores &quot;dog&quot; into the undo history.)</li> \n  <li>Bob may press Enter. When he does so, the current content of the text buffer is printed to the results window as a new line, after the lines that were printed earlier. The text buffer remains unmodified. (For example, if the text buffer contains &quot;dog&quot; and Bob presses Enter, &quot;dog&quot; will be appended to the results window, and the results buffer still contains &quot;dog&quot;.)</li> \n  <li>Bob may use two mouse clicks to restore any entry from the undo history to the text buffer. This operation does not modify the undo history.</li> \n </ul> Return the minimum total number of button presses (keyboard and mouse) that Bob needs to print all the given lines into the results window.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"UndoHistory",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"minPresses",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int minPresses(String[] lines)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 18",
			"id":0,
			"input":"{\"tomorrow\", \"topcoder\"}",
			"note":" The total number of button presses was 8 (typing \"tomorrow\") + 1 (Enter) + 2 (mouse) + 6 (typing \"pcoder\") + 1 (Enter) = 18.",
			"order":1
		},
		{
			"expect":"Returns: 6",
			"id":0,
			"input":"{\"a\",\"b\"}",
			"note":"After typing \"a\" and pressing enter, we need to restore the empty string (which is always present at the top of the undo buffer) before typing \"b\".",
			"order":2
		},
		{
			"expect":"Returns: 10",
			"id":0,
			"input":"{\"a\", \"ab\", \"abac\", \"abacus\" }",
			"note":"There are times when it is not necessary to use the undo history at all.",
			"order":3
		},
		{
			"expect":"Returns: 39",
			"id":0,
			"input":"{\"pyramid\", \"sphinx\", \"sphere\", \"python\", \"serpent\"}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 13",
			"id":0,
			"input":"{\"ba\",\"a\",\"a\",\"b\",\"ba\"} ",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"lines will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of lines will contain between 1 and 50 characters, inclusive."
		},
		{
			"order":3,
			"val":"Each element of lines will contain only lowercase letters ('a'-'z')."
		}
	]
}