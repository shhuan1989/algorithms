{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=4506&rd=6537",
	"statement":"State machines occur frequently in computer science literature. At any given point in time, a state machine is in a particular state p. After receiving an input symbol, the machine updates its state. The potential input symbols in this problem are 0, 1, 2, or 3. The String[] <b>transitions</b> describes how the state machine M behaves. Each element of <b>transitions</b> will contain 4 space delimited integers. The integers in element i (0-based) describe how M reacts to input while in state i. For example, if element 3 is &quot;0 4 2 3&quot;, then M will transition from state 3 to state 0, 4, 2, or 3 depending on whether 0, 1, 2, or 3 are received as input, respectively.<br /><br /> <br /><br /> Our state machine M is unfortunately out of control. We do not know which state M is currently in. To rectify the situation, we want to find a string s and a state h such that, after feeding s into M one symbol at a time, M will definitely be in state h. Considering all possible pairs of s and h, return the length of the shortest s. If no such pairs exist, return -1.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"SequenceSync",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getLength",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int getLength(String[] transitions)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 2",
			"id":0,
			"input":"{\"1 1 1 1\", \"1 1 1 2\", \"0 2 2 2\"}",
			"note":"The string \"33\" forces the machine into state 2.",
			"order":1
		},
		{
			"expect":"Returns: -1",
			"id":0,
			"input":"{\"1 1 1 1\", \"2 2 2 2\", \"3 3 3 3\", \"0 0 0 0\"}",
			"note":"There are no strings that work here.",
			"order":2
		},
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{\"0 0 0 0\"}",
			"note":"A string of length 0 works here.",
			"order":3
		},
		{
			"expect":"Returns: 15",
			"id":0,
			"input":"{\"1 1 1 0\", \"2 2 2 1\", \"3 3 3 2\", \"4 4 4 3\", \"5 5 5 5\", \"6 6 6 6\", \"7 7 7 0\", \"0 0 0 8\", \"8 8 8 8\", \"9 9 9 8\"}",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"transitions will contain between 1 and 20 elements inclusive."
		},
		{
			"order":2,
			"val":"Each element of transitions will have the form &quot;w x y z&quot; where w, x, y, and z are integers, without extra leading zeros, between 0 and k-1 inclusive. Here k is the number of elements in transitions."
		}
	]
}