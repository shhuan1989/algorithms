{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=8086&rd=11121",
	"statement":"<p> You are given an infinite sequence P, where the i-th member is defined as follows: </p> <pre>\n  P[i] = (<b>A</b>[i % <b>A</b>.size] ^ (<b>B</b>[i % <b>B</b>.size] + i / <b>B</b>.size)) % 1000000007\n</pre> <p> where % denotes modulo, ^ denotes exponentiation, / denotes integer division, and X.size represents the number of elements in X. </p> <p> Alternatively, the following pseudocode can be used to calculate the elements of P successively: </p> <pre>\nint i = 0;\nloop forever\n\tP[i] = (A[i % A.size] ^ B[i % B.size]) % 1000000007;\n\tB[i % B.size] = B[i % B.size] + 1;\n\ti = i + 1;\nend of loop\n</pre> <p> You are given int[]s <b>A</b> and <b>B</b>, and a String <b>N</b> containing an integer. Calculate the sum of the first <b>N</b> elements of the sequence (i.e., P[0] + P[1] + ... + P[<b>N</b> - 1]), and return that sum modulo 1000000007. </p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"StrangeArray",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"calculateSum",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int[], String",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int calculateSum(int[] A, int[] B, String N)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{3,4}",
			"id":0,
			"input":"{1,2,3}",
			"note":"1^3 + 2^4 = 17.",
			"order":1
		},
		{
			"expect":"{2, 3}",
			"id":0,
			"input":"{2, 3, 4}",
			"note":"2^2 + 3^3 + 4^(2 + 1) = 95.",
			"order":2
		},
		{
			"expect":"{2, 3}",
			"id":0,
			"input":"{2, 3, 4}",
			"note":"2^2 + 3^3 + 4^(2 + 1) + 2^(3 + 1) + 3^(2 + 2) = 192.",
			"order":3
		},
		{
			"expect":"{1}",
			"id":0,
			"input":"{1, 2, 3, 4}",
			"note":"1^1 + 2^2 + 3^3 + 4^4 + 1^5 + 2^6 + ... + 4^1000000000 = 607570807 (mod 1000000007).",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"A and B will each contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of A and B will be between 1 and 10^9, inclusive."
		},
		{
			"order":3,
			"val":"N will represent an integer between 1 and 10^18, inclusive, with no leading zeros."
		}
	]
}