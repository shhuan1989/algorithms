{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=10239&rd=14151",
	"statement":"SuperSum is a function defined as:<br /><br /> \n <ul> \n  <li> SuperSum(0 , <b>n</b>) = <b>n</b>, for all positive <b>n</b>.</li> \n  <li> SuperSum(<b>k</b> , <b>n</b>) = SuperSum(<b>k</b>-1 , 1) + SuperSum(<b>k</b>-1 , 2) + ... + SuperSum(<b>k</b>-1 , <b>n</b>), for all positive <b>k</b>, <b>n</b>.</li> \n </ul> <p>Given <b>k</b> and <b>n</b>, return the value for SuperSum(<b>k</b> , <b>n</b>) modulo 1000000007.</p> ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"SuperSum",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"calculate",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int calculate(int k, int n)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"3",
			"id":0,
			"input":"1",
			"note":"When  = 1, SuperSum is equal to the sum of the first  = 3 numbers: 1 + 2 + 3 = 6.",
			"order":1
		},
		{
			"expect":"3",
			"id":0,
			"input":"2",
			"note":"SuperSum(2 , 3) = SuperSum(1 , 1) + SuperSum(1 , 2) + SuperSum(1 , 3) = 1 + 3 + 6 = 10.",
			"order":2
		},
		{
			"expect":"10",
			"id":0,
			"input":"4",
			"note":"",
			"order":3
		},
		{
			"expect":"35",
			"id":0,
			"input":"10",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"k will be between 1 and 50, inclusive."
		},
		{
			"order":2,
			"val":"n will be between 1 and 1000000000, inclusive."
		}
	]
}