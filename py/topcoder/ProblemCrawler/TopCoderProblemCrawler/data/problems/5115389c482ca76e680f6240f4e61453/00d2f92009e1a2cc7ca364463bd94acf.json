{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12338&rd=15486",
	"statement":"<p> Percy would like to become the Penguin Emperor. First, he must go on a long journey to prove himself worthy. </p> <br /><br /> <p> There are several cities in Penguin Empire. All the cities lie on a circle around the great mountain. The cities are numbered 0 through <b>numCities</b>-1 in the clockwise direction around the mountain. </p> <br /><br /> <p> Percy lives in city 0 and that is where he will begin his journey. On the first day he will travel to a city adjacent to city 0. On the second day he will travel to another city two cities away from his current city. And so on: for each k, on the k-th day he will travel to a new city k cities away. Each day, Percy can choose a new direction of travel: either clockwise or counter-clockwise around the mountain. </p> <br /><br /> <p> <img src=\"http://www.topcoder.com/contest/problem/PenguinEmperor/emperorConcept.png\" /> </p> <br /><br /> <p> You are given the int <b>numCities</b> representing the number of cities in the Penguin Empire. You are also given a long <b>daysPassed</b> representing the number of days that have passed since Percy's journey began. Compute and return the number of journeys that take <b>daysPassed</b> days and return home to city 0. Two journeys are considered different if there is some k such that after k days the traveler is in different cities. As the number of journeys can be quite large, please return the result modulo 1,000,000,007. </p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"PenguinEmperor",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"countJourneys",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, long",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int countJourneys(int numCities, long daysPassed)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"2",
			"id":0,
			"input":"3",
			"note":"There are two ways to have a Journey that returns home after two days.  0 -> 1 -> 0 where directions are CW-CW 0 -> 2 -> 0 where directions are CCW-CCW  CW = clockwise CCW = counter-clockwise",
			"order":1
		},
		{
			"expect":"3",
			"id":0,
			"input":"4",
			"note":"There are two ways to have a Journey that returns home after three days.  0 -> 1 -> 3 -> 0 where directions are CW-CW-CCW or CW-CCW-CCW 0 -> 3 -> 1 -> 0 where directions are CCW-CCW-CW or CWW-CW-CW  CW = clockwise CCW = counter-clockwise",
			"order":2
		},
		{
			"expect":"36",
			"id":0,
			"input":"5",
			"note":"",
			"order":3
		},
		{
			"expect":"751",
			"id":0,
			"input":"300",
			"note":"",
			"order":4
		},
		{
			"expect":"750",
			"id":0,
			"input":"300",
			"note":"",
			"order":5
		},
		{
			"expect":"1000000000000000000",
			"id":0,
			"input":"350",
			"note":"",
			"order":6
		},
		{
			"expect":"7",
			"id":0,
			"input":"5",
			"note":"",
			"order":7
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"numCities will be between 2 and 350, inclusive."
		},
		{
			"order":2,
			"val":"daysPassed will be between 1 and 10^18, inclusive."
		}
	]
}