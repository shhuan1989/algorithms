{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11545&rd=14651",
	"statement":"<p>You've been asked to evaluate the performance of a card shuffler for a casino. Unfortunately, the first thing you notice when examining it is that its shuffling algorithm is not very good. For a deck of length N, it simply chooses x and y uniformly between 0 and N-1, inclusive, and then swaps the cards at those indices. (If x and y are the same, nothing happens.) It repeats this N times.</p> <br /><br /> <p>Prove to the casino that it needs a better algorithm or, at the very least, more swaps. Given a <b>permutation</b> of cards (represented by integers from 1 to N), determine the <i>relative</i> probability of <b>permutation</b> being chosen after N swaps, compared to a properly random shuffle. (In other words, return the probability of <b>permutation</b> being chosen, multiplied by N factorial.)</p>",
	"notes":[{
		"order":1,
		"val":"The return value must have an absolute or relative error less than 1e-9."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"PermutationBias",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"relativeProbability",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"double",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"double relativeProbability(int[] permutation)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 1.0",
			"id":0,
			"input":"{2,1}",
			"note":"50% of the \"swaps\" will be useless. So the probability of 0 real swaps is 25%, 1 is 50%, and 2 (equivalent to 0) is 25%. On a 2-element array, the shuffle is uniformly random.",
			"order":1
		},
		{
			"expect":"Returns: 1.037037037037037",
			"id":0,
			"input":"{2,1,3}",
			"note":"The shuffle favors this permutation slightly.",
			"order":2
		},
		{
			"expect":"Returns: 60.173086681768936",
			"id":0,
			"input":"{1,2,3,4,5,6,7,8,9,10}",
			"note":"The chance of nothing happening at all is much higher than it should be!",
			"order":3
		},
		{
			"expect":"Returns: 1.7716122730889852",
			"id":0,
			"input":"{16,17,10,4,8,18,12,2,3,9,14,15,13,19,5,11,7,6,20,1}",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"permutation will contain between 1 and 35 elements, inclusive."
		},
		{
			"order":2,
			"val":"permutation will contain each number from 1 to N exactly once, where N is the number of elements in permutation."
		}
	]
}