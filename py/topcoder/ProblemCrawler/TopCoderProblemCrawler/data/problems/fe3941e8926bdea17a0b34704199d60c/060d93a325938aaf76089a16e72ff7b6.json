{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=13197&rd=15857",
	"statement":"<p>You live in a city with <b>N</b> intersections, numbered 1 through <b>N</b>. There are some roads in the city. Each road is bidirectional and connects two intersections. There are no loops and each pair of intersections is connected by at most one road. The road network is connected - that is, one can travel between any two intersections.</p> <br /><br /> <p>A special feature of this city is that some of the roads have no speed limits, and everyone drives along those roads at an insane speed. For the purpose of this problem, we will simply assume that these roads can be traversed instantly, in zero time.</p> <br /><br /> <p>You are given the int <b>N</b> and three int[]s <b>A</b>, <b>B</b>, and <b>C</b>, each with the same number of elements. The int[]s <b>A</b>, <b>B</b>, and <b>C</b> describe the road network: For each valid i, there is a bidirectional road that connects the intersections <b>A</b>[i] and <b>B</b>[i], and it takes <b>C</b>[i] seconds to traverse that road in either direction.</p> <br /><br /> <p>You are currently at the intersection 1 and you want to travel to the intersection <b>N</b> as quickly as possible. Count all ways of doing so, and return that count modulo 1,000,000,009. If there are infinitely many ways, return -1 instead. (Two ways are considered different if the sequences of visited intersections differ. Note that it is allowed to enter any intersection, including intersections 1 and <b>N</b>, multiple times.)</p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"DrivingPlans",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"count",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int[], int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int count(int N, int[] A, int[] B, int[] C)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{1,1,2,3}",
			"id":0,
			"input":"4",
			"note":"There are exactly two shortest ways of travel: 1-2-4 and 1-3-4.",
			"order":1
		},
		{
			"expect":"{1,1,2,3}",
			"id":0,
			"input":"4",
			"note":"Remember that each road can be used in both directions. In this case, there are infinitely many ways how to reach the intersection 4 in shortest time. For example, you can go 1-3-4, or 1-3-4-3-4, or 1-3-4-3-4-3-4, etc.",
			"order":2
		},
		{
			"expect":"{1,1,2,3,4,4,5,6}",
			"id":0,
			"input":"7",
			"note":"",
			"order":3
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"N will be between 2 and 2,000, inclusive."
		},
		{
			"order":2,
			"val":"A, B and C will contain between 1 and 2,000 elements, inclusive."
		},
		{
			"order":3,
			"val":"A, B and C will contain the same number of elements."
		},
		{
			"order":4,
			"val":"Each element of A and B will be between 1 and N, inclusive."
		},
		{
			"order":5,
			"val":"Each element of C will be between 0 and 100,000, inclusive."
		},
		{
			"order":6,
			"val":"For each valid i, A[i] will be different from B[i]."
		},
		{
			"order":7,
			"val":"No two roads will connect the same pair of intersections."
		},
		{
			"order":8,
			"val":"The road network will be connected."
		}
	]
}