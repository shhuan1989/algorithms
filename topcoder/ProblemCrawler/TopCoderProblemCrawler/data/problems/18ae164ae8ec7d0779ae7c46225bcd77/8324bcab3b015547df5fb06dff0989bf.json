{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12389&rd=15489",
	"statement":"The factorial of the <i>k</i>-th order of a number <i>n</i> is denoted <i>n!k</i> and defined by the following recurrences:<br /><br /> 1) <i>n!k</i> = <i>n!(k-1)</i> * <i>(n-1)!k</i> for <i>n</i> &gt; 0 and <i>k</i> &gt; 0<br /><br /> 2) <i>n!k</i> = 1 for <i>n</i> = 0<br /><br /> 3) <i>n!k</i> = n for <i>k</i> = 0<br /><br /> <br /><br /> For example, 7!1 = 7! (the traditional factorial), and 5!3 = 5!2 * 4!3 = (5!1 * 4!2) * 4!3. <br /><br /><br /><br /> You are given ints <b>N</b>, <b>K</b> and <b>B</b>. Count the number of trailing zeros in the number <b>N</b>!<b>K</b> when it is written in base <b>B</b> and return it modulo 1,000,000,009.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"MegaFactorial",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"countTrailingZeros",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int countTrailingZeros(int N, int K, int B)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"1",
			"id":0,
			"input":"6",
			"note":"6!1 = 6! = 23100 in base 4.",
			"order":1
		},
		{
			"expect":"2",
			"id":0,
			"input":"4",
			"note":"4!2 = 4!1 * 3!2 = ... = 4! * 3! * 2! = 1200 in base 6.",
			"order":2
		},
		{
			"expect":"3",
			"id":0,
			"input":"10",
			"note":"",
			"order":3
		},
		{
			"expect":"10",
			"id":0,
			"input":"50",
			"note":"",
			"order":4
		},
		{
			"expect":"16",
			"id":0,
			"input":"1000000000",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"N will be between 1 and 1,000,000,000 (10^9), inclusive."
		},
		{
			"order":2,
			"val":"K will be between 1 and 16, inclusive."
		},
		{
			"order":3,
			"val":"B will be between 2 and 10, inclusive."
		}
	]
}