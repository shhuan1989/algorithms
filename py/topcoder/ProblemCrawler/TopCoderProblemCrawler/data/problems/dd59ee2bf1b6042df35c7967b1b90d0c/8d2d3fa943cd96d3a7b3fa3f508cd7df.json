{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=10687&rd=13907",
	"statement":"<p> John and Brus have an interest in team sports tournaments. They are currently investigating a basketball tournament. Basketball is a team sport in which two teams of five players try to score points against one another by placing a ball through a ten foot high hoop. Basketball is one of the most popular and widely viewed sports in the world. </p> <p> There are <b>n</b> teams in the tournament. Each pair of teams plays exactly two games against each other. Each game results in one team winning. There are no draws. After the tournament is over, the team with the highest total number of wins takes 1st place, the team with the second highest number of wins takes 2nd place, and so on. </p> <p> A sequence of integers W<sub>1</sub>, W<sub>2</sub>, ..., W<sub>n</sub> is called a <i>W-sequence</i> if there exists a tournament where the team that took i-th place has exactly W<sub>i</sub> total wins (for all i between 1 and <b>n</b>, inclusive). Given ints <b>n</b> and <b>m</b>, return the number of W-sequences consisting of <b>n</b> integers where W<sub>1</sub> = <b>m</b>. </p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"TheBasketballDivOne",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"find",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int find(int n, int m)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"1",
			"id":0,
			"input":"2",
			"note":"The only possible W-sequence is (1, 1).",
			"order":1
		},
		{
			"expect":"1",
			"id":0,
			"input":"3",
			"note":"There is no valid outcome where the winning team has just one win.",
			"order":2
		},
		{
			"expect":"3",
			"id":0,
			"input":"3",
			"note":"The two possible sequences are (3, 2, 1) and (3, 3, 0).",
			"order":3
		},
		{
			"expect":"6",
			"id":0,
			"input":"4",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"n will be between 2 and 5, inclusive."
		},
		{
			"order":2,
			"val":"m will be between 1 and 9, inclusive."
		}
	]
}