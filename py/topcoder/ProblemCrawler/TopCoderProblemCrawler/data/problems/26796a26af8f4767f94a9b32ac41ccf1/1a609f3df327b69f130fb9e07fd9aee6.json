{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11469&rd=14543",
	"statement":"<p> Alice and Bob are going to play a famous game called Nim. In the game Nim, first they set up stones in <b>K</b> piles containing a<sub>1</sub>,...,a<sub>K</sub> stones respectively. Then they alternatively take turns (Alice moves first). On a player's turn the player chooses a pile and takes some (at least one) stones from that pile. If there are no piles left which contain any stones, the player loses. </p><p> Since they like prime numbers very much, they decided to make each a<sub>i</sub> a prime number less than or equal to <b>L</b>. Given <b>K</b> and <b>L</b> return the number of such initial setups which allows Bob to win, assuming they play optimally, modulo 1,000,000,007. </p> ",
	"notes":[{
		"order":1,
		"val":"Two setups are considered different if at least one a is different between them (for example, (a,a,a)=(2,5,7) and (2,7,5) are considered different)."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"Nim",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"count",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int count(int K, int L)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"7",
			"id":0,
			"input":"3",
			"note":"Prime numbers <= 7 are 2, 3, 5 and 7. Bob can win if the initial setup is (2,5,7) or its permutation. So return 3! = 6. ",
			"order":1
		},
		{
			"expect":"13",
			"id":0,
			"input":"4",
			"note":"Bob can win if the initial setup is (p,p,p,p) for some prime p<=13, (p,p,q,q) or its permutation for p<q<=13, or (3,5,11,13) or its permutation. So return 6+(6C2*6)+4!=6+90+24=120. ",
			"order":2
		},
		{
			"expect":"100",
			"id":0,
			"input":"10",
			"note":"",
			"order":3
		},
		{
			"expect":"12345",
			"id":0,
			"input":"123456789",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"K will be between 1 and 1000000000(=10^9), inclusive."
		},
		{
			"order":2,
			"val":"L will be between 2 and 50000, inclusive."
		}
	]
}