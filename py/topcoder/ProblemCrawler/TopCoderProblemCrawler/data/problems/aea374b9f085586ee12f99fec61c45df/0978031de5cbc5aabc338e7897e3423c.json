{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=10463&rd=13749",
	"statement":"A permutation A[0], A[1], ..., A[N-1] is a sequence containing each integer between 0 and N-1, inclusive, exactly once. Each permutation A of length N has a corresponding child array B of the same length, where B is defined as follows: \n <ol> \n  <li>B[0] = 0</li> \n  <li>B[i] = A[B[i-1]], for every i between 1 and N-1, inclusive.</li> \n </ol> A permutation is considered perfect if its child array is also a permutation.<br /><br /><br /><br /> Below are given all permutations for N=3 with their child arrays. Note that for two of these permutations ({1, 2, 0} and {2, 0, 1}) the child array is also a permutation, so these two permutations are perfect. <pre>\nPermutation\t\tChild array\n{0, 1, 2}\t\t{0, 0, 0}\n{0, 2, 1}\t\t{0, 0, 0}\n{1, 0, 2}\t\t{0, 1, 0}\n{1, 2, 0}\t\t{0, 1, 2}\n{2, 0, 1}\t\t{0, 2, 1}\n{2, 1, 0}\t\t{0, 2, 0}\n</pre> You are given a int[] <b>P</b> containing a permutation of length N. Find a perfect permutation Q of the same length such that the difference between <b>P</b> and Q is as small as possible, and return this difference. The difference between <b>P</b> and Q is the number of indices i for which <b>P</b>[i] and Q[i] are different.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"PerfectPermutation",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"reorder",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int reorder(int[] P)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: 0",
			"id":0,
			"input":"{2, 0, 1}",
			"note":" is a perfect permutation, so we can use the same permutation for Q. The difference is then 0 because  and Q are the same.",
			"order":1
		},
		{
			"expect":"Returns: 2",
			"id":0,
			"input":"{2, 0, 1, 4, 3}",
			"note":"Q might be {2, 0, 3, 4, 1}.",
			"order":2
		},
		{
			"expect":"Returns: 2",
			"id":0,
			"input":"{2, 3, 0, 1}",
			"note":"Q might be {1, 3, 0, 2}.",
			"order":3
		},
		{
			"expect":"Returns: 3",
			"id":0,
			"input":"{0, 5, 3, 2, 1, 4}",
			"note":"",
			"order":4
		},
		{
			"expect":"Returns: 5",
			"id":0,
			"input":"{4, 2, 6, 0, 3, 5, 9, 7, 8, 1}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"P will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"P will contain each integer between 0 and N-1, inclusive, exactly once, where N is the number of elements in P."
		}
	]
}