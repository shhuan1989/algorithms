{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11482&rd=14539",
	"statement":"<p>Magical Girls are girls who have magical powers. They fight against evil witches to protect the Earth.</p> <br /><br /> <p>You, one of the Magical Girls, found a slate palette. You know that the information of an ancient magic is written on the palette. Unfortunately, some parts of the palette are broken, so you cannot read all the information.</p> <br /><br /> <p>The information is indicated by a rectangular grid whose width is W and height is H. Rows are numbered from 0 to H-1 from top to bottom. Columns are numbered from 0 to W-1 from left to right. Each cell of the grid should contain an integer between 1 and 9, inclusive. Now some of the cells are broken and don't contain a digit. You want to know how many ways the empty cells can be filled so that the completed grid meets the following conditions:</p> <br /><br /> \n <ul> \n  <li>For all integers r and c, where 0 &lt;= r &lt;= H-<b>n</b> and 0 &lt;= c &lt; W, the sum F[r][c] + F[r+1][c] + ... + F[r+<b>n</b>-1][c] must be an odd number. (Here F[r][c] is a number written in the cell whose row number is r and column number is c.)</li> \n  <li>For all integers r and c, where 0 &lt;= r &lt; H and 0 &lt;= c &lt;= W-<b>m</b>, the sum F[r][c] + F[r][c+1] + ... + F[r][c+<b>m</b>-1] must be an odd number.</li> \n </ul> <br /><br /> <p>You are given a String[] <b>palette</b>. The j-th character of the i-th element of <b>palette</b> is a digit ('1'-'9') if the cell (i, j) is not broken, or a dot ('.') if the cell (i, j) is broken and now empty. Return the number of ways to fill the grid modulo 1,000,000,007.</p> ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"MagicalGirlLevelTwoDivOne",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"theCount",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[], int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int theCount(String[] palette, int n, int m)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"2",
			"id":0,
			"input":"{\"12\", \"2.\"}",
			"note":"The missing digit can be filled with '1', '3', '5', '7' or '9'.",
			"order":1
		},
		{
			"expect":"2",
			"id":0,
			"input":"{\"21\", \"1.\"}",
			"note":"This time it can be filled with '2', '4', '6' or '8'.",
			"order":2
		},
		{
			"expect":"1",
			"id":0,
			"input":"{\"...\", \"...\", \"...\"}",
			"note":"",
			"order":3
		},
		{
			"expect":"2",
			"id":0,
			"input":"{\"..58..\", \"..47..\"}",
			"note":"It's impossible to fill this grid.",
			"order":4
		},
		{
			"expect":"4",
			"id":0,
			"input":"{\"...1.2.3\", \"4.5.6...\", \"...7.8.9\", \"1.2.3...\"}",
			"note":"",
			"order":5
		},
		{
			"expect":"10",
			"id":0,
			"input":"{}",
			"note":"",
			"order":6
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"palette will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of palette will contain between 1 and 50 characters, inclusive."
		},
		{
			"order":3,
			"val":"Each element of palette will contain the same number of characters."
		},
		{
			"order":4,
			"val":"Each character in palette will be '1', '2', '3', '4', '5', '6', '7', '8', '9', or '.'."
		},
		{
			"order":5,
			"val":"n will be between 1 and min{10, H}, inclusive, where H is the number of elements in palette."
		},
		{
			"order":6,
			"val":"m will be between 1 and min{10, W}, inclusive, where W is the number of characters in palette[0]."
		}
	]
}