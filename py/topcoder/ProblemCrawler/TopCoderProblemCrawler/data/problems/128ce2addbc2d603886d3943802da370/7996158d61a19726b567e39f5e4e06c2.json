{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=13193&rd=15855",
	"statement":"In the Republic of Nlogonia there are N cities. For convenience, the cities are numbered 0 through N-1. For each two different cities i and j, there is a direct one-way road from i to j. You are given the lengths of those roads as a String[] <b>dist</b> with N elements, each with N characters. For each i and j, the character <b>dist</b>[i][j] represents the length of the road from i to j. <br /><br /><br /><br /> The lengths of roads are integers between 1 and 9, inclusive, and they are represented by digits '1' through '9'. That is, for distinct i and j, <b>dist</b>[i][j] will be between '1' and '9'. For each i, <b>dist</b>[i][i] will be '0'. Note that the roads from i to j and from j to i may have different lengths. <br /><br /><br /><br /> Every year on Algorithms Day (the most important holiday in Nlogonia) people travel between the cities. More precisely, for each pair of distinct cities i and j, one full bus of people travels from i to j. Each of those buses drives along a shortest path from its origin to its destination. If there are multiple shortest paths, the bus driver picks one of them arbitrarily. <br /><br /><br /><br /> The roads in Nlogonia are currently limited. You are given an int <b>T</b> with the following meaning: each of the current roads is only safe if it is <i>guaranteed</i> that there will be <i>strictly fewer</i> than <b>T</b> buses driving along the road. In other words, a road is <i>unsafe</i> if it is possible that <b>T</b> or more buses will use it. The government wants to rebuild all unsafe roads before the next Algorithms Day. Return the sum of lengths of all unsafe roads.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"BuildingRoutes",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"build",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[], int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int build(String[] dist, int T)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"1",
			"id":0,
			"input":"{\"011\", \"101\", \"110\"}",
			"note":"As =1, a road is unsafe as soon as it is possible that a bus will use it. Each of the six roads in this test case belongs to some shortest path, hence each of them is unsafe",
			"order":1
		},
		{
			"expect":"1",
			"id":0,
			"input":"{\"033\", \"309\", \"390\"}",
			"note":"The roads 1->2 and 2->1 (the two roads of length 9) will not be used by any bus. Only the four remaining roads are unsafe in this case.",
			"order":2
		},
		{
			"expect":"2",
			"id":0,
			"input":"{\"0123\", \"1023\", \"1203\", \"1230\"}",
			"note":"",
			"order":3
		},
		{
			"expect":"3",
			"id":0,
			"input":"{\"05789654\", \"10347583\", \"65085479\", \"55602398\", \"76590934\", \"57939045\", \"12345608\", \"68647640\"}",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"N will be between 2 and 50, inclusive."
		},
		{
			"order":2,
			"val":"dist will contain exactly N elements."
		},
		{
			"order":3,
			"val":"Each element of dist will contain exactly N characters."
		},
		{
			"order":4,
			"val":"For each i, dist[i][i] will be '0'."
		},
		{
			"order":5,
			"val":"For each pair of distinct i and j, dist[i][j] will be between '1' and '9', inclusive."
		},
		{
			"order":6,
			"val":"T will be between 1 and 2500, inclusive."
		}
	]
}