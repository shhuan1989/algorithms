{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11476&rd=14539",
	"statement":"<p>Magical Girls are girls who have magical powers. They fight against evil witches to protect the Earth.</p> <br /><br /> <p>You, one of the Magical Girls, are at point (0, 0) of the plane. You find another Magical Girl at (<b>x</b>, <b>y</b>) and she seems to be injured. So you decide to go to point (<b>x</b>, <b>y</b>) to help her.</p> <br /><br /> <p>You can move only by <i>n-knight jump</i>. For a positive integer n, the n-knight jump is 8 types of moves. You can go from (0, 0) to (n, 1), (n, -1), (-n, 1), (-n, -1), (1, n), (-1, n), (1, -n) or (-1, -n) by using n-knight jump once.</p> <br /><br /> <p>You are given a int[] <b>jumpTypes</b> containing the valid n-knight jumps you can perform. You can only use an n-knight jump if <b>jumpTypes</b> contains n. Return &quot;YES&quot; if you can reach (<b>x</b>, <b>y</b>) with the n-knight jumps of given numbers. Otherwise return &quot;NO&quot; (all quotes for clarity). You can use each n-knight jump as many times as you want.</p> ",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"MagicalGirlLevelOneDivOne",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"isReachable",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"String",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"String isReachable(int[] jumpTypes, int x, int y)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"5",
			"id":0,
			"input":"{2}",
			"note":"(0, 0) -> (2, 1) -> (4, 2) -> (5, 4)",
			"order":1
		},
		{
			"expect":"5",
			"id":0,
			"input":"{3}",
			"note":"",
			"order":2
		},
		{
			"expect":"1000000000",
			"id":0,
			"input":"{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}",
			"note":"",
			"order":3
		},
		{
			"expect":"999999999",
			"id":0,
			"input":"{999999999}",
			"note":"",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"jumpTypes will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each element of jumpTypes will be between 1 and 1,000,000,000, inclusive."
		},
		{
			"order":3,
			"val":"All elements of jumpTypes will be distinct."
		},
		{
			"order":4,
			"val":"x and y will each be between -1,000,000,000 and 1,000,000,000, inclusive."
		}
	]
}