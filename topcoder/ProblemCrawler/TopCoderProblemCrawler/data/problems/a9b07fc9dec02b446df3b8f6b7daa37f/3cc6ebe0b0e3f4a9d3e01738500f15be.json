{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=2295&rd=4765",
	"statement":"We want to display a scatterplot in a 1000x1000 window. However, our points may have x and y values anywhere between -1,000,000,000 and 1,000,000,000. So, in order to display our data in a reasonable fashion, we want to make it fit in the window. Your task is, given the <b>x</b> and <b>y</b> values of the data, scale and translate the data so that the lowest x value is 0, and the highest is 1000. Do the same thing for the y values, being careful to preserve the relative distances in both the x and y directions. For example, if <b>x</b> = {-100, 0, 50, 100}, then it should be changed to {0,500,750,1000}. Note that changing the points may result in non-integral values, which should be rounded to the nearest integer (.5 rounds up). The return value should be a String[], each of whose elements is formatted as &quot;&lt;x&gt; &lt;y&gt;&quot;, where &lt;x&gt; and &lt;y&gt; are the scaled and translated values of the corresponding elements of the input. &lt;x&gt; and &lt;y&gt; should be separated by exactly one space and have no extra leading zeros.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"Display",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"transform",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"String[]",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"String[] transform(int[] x, int[] y)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{-100, 0, 50, 100}",
			"id":0,
			"input":"{-100, 0, 50, 100}",
			"note":"If we translate all the points +100 in both the x and y directions, and then scale all the coordinates up by a factor of 5, we find that they meet our requirements.",
			"order":1
		},
		{
			"expect":"{0,2001,1}",
			"id":0,
			"input":"{0,2000,1}",
			"order":2
		},
		{
			"expect":"{-1000000000,1000000000,500000,499999}",
			"id":0,
			"input":"{-1000000000,1000000000,500000,499999}",
			"order":3
		},
		{
			"expect":"{-6464,36464,-43,373,363,-37633,2022,-644,2520,2520,2520}",
			"id":0,
			"input":"{-53,652,-6132,673,74,-473,373,736363,234,234,234}",
			"order":4
		},
		{
			"expect":"{0,999,2000}",
			"id":0,
			"input":"{0,1001,2000}",
			"note":"Be sure to round up when the fractional part is .5.",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"Each element of x and y will be between -1,000,000,000 and 1,000,000,000, inclusive."
		},
		{
			"order":2,
			"val":"x will contain at least two distinct values."
		},
		{
			"order":3,
			"val":"y will contain at least two distinct values."
		},
		{
			"order":4,
			"val":"x and y will contain the same number of elements."
		},
		{
			"order":5,
			"val":"x and y will each contain between 2 and 50 elements, inclusive."
		}
	]
}