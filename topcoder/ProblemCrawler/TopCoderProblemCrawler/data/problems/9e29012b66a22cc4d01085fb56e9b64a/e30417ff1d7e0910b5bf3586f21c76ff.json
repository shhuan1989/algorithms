{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=6049&rd=9914",
	"statement":"You will be given 2 int[]s <b>charPoly</b> and <b>minPoly</b>, each containing N positive integers. A <i>Jordan form</i> is determined by choosing, for each index i, a partition of <b>charPoly</b>[i] such that no component of the partition exceeds <b>minPoly</b>[i] and at least 1 component is equal to <b>minPoly</b>[i]. A partition of a value v is an ordered list of positive integers that sum to v. Two Jordan forms are equivalent if they have the same partition for each i. Return the number of distinct Jordan forms mod 179424673.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"NumJordanForms",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"howMany",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int howMany(int[] charPoly, int[] minPoly)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{1}",
			"id":0,
			"input":"{5}",
			"note":"Only one Jordan form is possible here.",
			"order":1
		},
		{
			"expect":"{3}",
			"id":0,
			"input":"{5}",
			"note":"There are 2 partitions of 5 that are possible here: (1,1,3) and (2,3).",
			"order":2
		},
		{
			"expect":"{1,2,3,3,3,3,3,3,3}",
			"id":0,
			"input":"{1,2,3,4,5,6,7,8,9}",
			"order":3
		},
		{
			"expect":"{500,1000,1500,2000,2500}",
			"id":0,
			"input":"{4000,4000,4000,4000,4000}",
			"order":4
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"charPoly will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":2,
			"val":"minPoly will contain the same number of elements as charPoly."
		},
		{
			"order":3,
			"val":"Each element of charPoly will be between 1 and 4000, inclusive."
		},
		{
			"order":4,
			"val":"Element i of minPoly will be between 1 and charPoly[i], inclusive."
		}
	]
}