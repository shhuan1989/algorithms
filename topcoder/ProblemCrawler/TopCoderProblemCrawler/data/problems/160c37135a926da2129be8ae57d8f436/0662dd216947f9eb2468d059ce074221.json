{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=8111&rd=10891",
	"statement":"<p> An RLE compressed number is uncompressed as follows. Replace each occurrence of the substring &quot;[k]c&quot; (quotes for clarity), where k is a positive integer without leading zeroes and c is a single digit, with k consecutive occurrences of c. For example, &quot;12[3]3[2]4[5]1&quot; uncompresses to &quot;123334411111&quot;. &quot;123[2]3441[3]11&quot; uncompresses to the same number. </p> <p> Note that uncompression is not recursive; brackets are not allowed to be nested. </p> <p> You are given two RLE compressed numbers <b>a</b> and <b>b</b> and String[] <b>k</b>. Uncompress <b>a</b> and <b>b</b>, and add them together. Return a int[], the i-th element of which is the <b>k</b>[i]-th digit of the sum. The 0-th digit is the rightmost digit, the 1-st digit is the next digit to the left, etc. If there are not enough digits, the corresponding element must be equal to 0. </p>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"RLESum",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getDigits",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String, String, String[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int[]",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int[] getDigits(String a, String b, String[] k)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"\"[3]1[3]2[3]3\"",
			"id":0,
			"input":"\"[12]3\"",
			"note":" decompresses to 333333333333, and  decompresses to 111222333. Their sum is 333444555666. We return all of its digits, and also 0 for the 12-th digit which doesn't exist.",
			"order":1
		},
		{
			"expect":"\"[5]9\"",
			"id":0,
			"input":"\"[5]9\"",
			"note":"",
			"order":2
		},
		{
			"expect":"\"987656789\"",
			"id":0,
			"input":"\"123456789\"",
			"note":"Note that  need not be sorted, and its elements can be equal to each other.",
			"order":3
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"a and b will contain only digits ('0'-'9') and brackets ('[' and ']')."
		},
		{
			"order":2,
			"val":"a and b will each contain between 1 and 50 characters, inclusive."
		},
		{
			"order":3,
			"val":"a and b will each be an RLE compressed number that uncompresses to a valid positive integer with no extra leading zeroes."
		},
		{
			"order":4,
			"val":"a and b, when uncompressed, will each contain no more than 10^18 digits."
		},
		{
			"order":5,
			"val":"k will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":6,
			"val":"Each element of k will be an integer between 0 and 10^18, inclusive, without extra leading zeroes."
		}
	]
}