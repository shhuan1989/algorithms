{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12397&rd=15571",
	"statement":"Frog Jim is fond of jumping. Moreover, all his jumps have the same length X. Currently, he is standing at the point 0 on the real axis. He needs to jump along the axis until he gets to point <b>D</b> or beyond it. <br /><br /><br /><br /> There are several pits between points 0 and <b>D</b>. For each valid i, there is a pit strictly between <b>L</b>[i] and <b>R</b>[i]. This means that Jim cannot step onto any point that is strictly between points <b>L</b>[i] and <b>R</b>[i]. (He is allowed to step onto the points <b>L</b>[i] and <b>R</b>[i]: as all pits are disjoint, the endpoints of each pit are always safe.) <br /><br /><br /><br /> Find the minimum length of jump X such that if Jim performs only jumps of length X, he can avoid every pit and get to point <b>D</b> or any point beyond it. Note that this length can be non-integer.",
	"notes":[{
		"order":1,
		"val":"The returned value must have an absolute or relative error less than 1e-9."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"TheFrog",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getMinimum",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int[], int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"double",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"double getMinimum(int D, int[] L, int[] R)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{2}",
			"id":0,
			"input":"16",
			"note":"Moving by jumps of length 7, Jim goes from point 0 to point 7, then to point 14 and then to point 21, which is beyond 16. If Jim chose a shorter jump, he would end up in the pit.",
			"order":1
		},
		{
			"expect":"{11, 3}",
			"id":0,
			"input":"25",
			"note":"There are two pits. One of them is between points 11 and 21 and the other between points 3 and 7. By fixing jump length at 10.5, Jim successfully avoids them.",
			"order":2
		},
		{
			"expect":"{0}",
			"id":0,
			"input":"100",
			"note":"Jim has no other choice but to jump right to point 100.",
			"order":3
		},
		{
			"expect":"{0, 50}",
			"id":0,
			"input":"100",
			"note":"In this case, point 50 is a suitable place to land, so Jim can choose X = 50.",
			"order":4
		},
		{
			"expect":"{17, 25281, 5775, 2825, 14040}",
			"id":0,
			"input":"30000",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"D will be between 1 and 30,000, inclusive."
		},
		{
			"order":2,
			"val":"L will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":3,
			"val":"Each element of L will be between 0 and D-1, inclusive."
		},
		{
			"order":4,
			"val":"R will contain the same number of elements as L."
		},
		{
			"order":5,
			"val":"The i-th element of R will be between L[i]+1 and D, inclusive."
		},
		{
			"order":6,
			"val":"The intervals given by (L[i], R[i]) will not intersect."
		}
	]
}