{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=3055&rd=6533",
	"statement":"Unit fractions are defined by having 1 in the numerator position. Any positive fraction of the form <b>n</b>/<b>d</b> can be rewritten as a finite sum of distinct unit fractions. When <b>n</b>&lt;<b>d</b>, such a sum can be found by repeatedly subtracting the largest possible unit fraction until you reach 0. <br /><br /> <br /><br /> For example, if you begin with 4/5 then the largest unit fraction you can subtract is 1/2. You are then left with 3/10. The largest unit fraction you can subtract from 3/10 is 1/4. You are then left with 1/20. The largest unit fraction you can subtract is 1/20 leaving you with 0. You should return a String[] giving the sequence of fractions you subtract, in the order you subtract them. Each should be given in the form &quot;1/q&quot; where q is a positive integer with no leading zeros. In the example just given, you would return <pre> {&quot;1/2&quot;,&quot;1/4&quot;,&quot;1/20&quot;} </pre>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"FractionSplit",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"getSum",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"String[]",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"String[] getSum(int n, int d)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"5",
			"id":0,
			"input":"4",
			"note":"The example above.",
			"order":1
		},
		{
			"expect":"3",
			"id":0,
			"input":"2",
			"note":"1/2 is the largest unit fraction that can be subtracted from 2/3. The unit fraction 1/6 remains after the subtraction.",
			"order":2
		},
		{
			"expect":"2",
			"id":0,
			"input":"1",
			"note":"1/2 is the largest unit fraction you can subtract.",
			"order":3
		},
		{
			"expect":"16",
			"id":0,
			"input":"15",
			"order":4
		},
		{
			"expect":"15",
			"id":0,
			"input":"14",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"d will be between 2 and 16 inclusive."
		},
		{
			"order":2,
			"val":"n will be between 1 and d-1 inclusive."
		}
	]
}