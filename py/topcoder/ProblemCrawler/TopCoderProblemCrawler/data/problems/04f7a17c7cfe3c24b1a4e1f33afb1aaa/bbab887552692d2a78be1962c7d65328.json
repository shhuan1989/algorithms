{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=177&rd=51",
	"statement":"<pre>Class name: TCMLParser\nMethod name: replaceTag\nParameters: String, int, String\nReturns: String\n\nYou are in charge of a document system that utilizes numeric code tags to\nrender documents for printing.  There is a batch of documents that have text\nbased tags that you must parse for input into the system.  Implement a class\nTCMLParser that contains a method replaceTag to convert the text based tags\ninto a specified numeric code tag.\nThe method parameters are: String tagstring, int code, String toParse\n* tagstring is a String containing letters (a-z and A-Z, inclusive)\nrepresenting the TCML tag string to replace.  Its length is between 1 and 10,\ninclusive.\n* code is an int between 1 and 1000, inclusive, representing the code with\nwhich to replace the tag string.\n* toParse is a String containing between 1 and 50, inclusive, letters (a-z and\nA-Z, inclusive), numbers (0-9, inclusive), less than signs (&lt;), greater than\nsigns (&gt;), equal signs (=), slashes(/) or spaces.  The '&lt;' and '&gt;' may only be\nused as part of a tag.\n\nA tag is defined as a '&lt;' that may be followed by letters, numbers, slashes or\nspaces and then a '&gt;'.  A  tag always starts with a '&lt;' and ends with a '&gt;'.\nTags may not be nested.\n\nThe following toParse Strings are not valid:\n&quot;&gt;HI&quot;   &quot;&lt;a&lt;b&gt;c&gt;&quot;   &quot;&lt;a b c&gt;&lt;&quot;   &quot;&lt;a&lt;b&gt;&quot;\n\nThe following toParse Strings are valid:\n&quot;/=&lt;&gt;HI&quot;  &quot;/&lt;&gt;H=I&lt;&gt;/&quot;  &quot;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&quot;   &quot;&lt;a=/&gt;&lt;b==//bb&gt;&lt;c223&gt;&quot;   &quot;&lt;a b c&gt;&quot;\n\nThe method returns a String that is toParse, except every occurrence of\ntagstring within a tag should be replaced with code.\n\nNote:\n- The string should be processed from the left most character to the right.\n- The replace is not case sensitive.  If the tagstring is &quot;BODY&quot;: &quot;BODY&quot;,\n&quot;body&quot;, and &quot;BoDy&quot; should all be replaced.  However, characters not replaced\nshould be returned in the same case they were inputted.\n- Only replace the tagstring if it is between a '&lt;' and before the next '&gt;'.\nThere can, however, be characters between the '&lt;' and '&gt;' that are not replaced.\n- tagstring is not defined by space (' ') boundaries.  For example, if\ntagstring=&quot;b&quot;, code=2 and toParse=&quot;&lt;b b abc ab c&gt;&quot; then the output would be &quot;&lt;2\n2 a2c a2 c&gt;&quot;. \n\nThe method signature is (be sure your method is public):\n\nString replaceTag(String tagstring, int code, String toParse);\n\nTopCoder will check the following:\n* tagstring is a String containing letters (a-z and A-Z, inclusive)\nrepresenting the TCML tag string to replace.  Its length is between 1 and 10,\ninclusive.\n* code is an int between 1 and 1000, inclusive, representing the code with\nwhich to replace the tag string.\n* toParse is a String containing between 1 and 50, inclusive, letters (a-z and\nA-Z, inclusive), numbers (0-9, inclusive), less than signs (&lt;), greater than\nsigns (&gt;), equal signs (=), slashes(/) or spaces.\n* All '&lt;' and '&gt;' are used only in tags\n* Tags are not nested\n\nExamples:\n\nIf tagstring=&quot;BODY&quot;, code=10, and toParse=&quot;&lt;&gt;&lt;BODY garbage&gt;body&lt;/BODY&gt;&quot;, the\nmethod should return &quot;&lt;&gt;&lt;10 garbage&gt;body&lt;/10&gt;&quot;.\nIf tagstring=&quot;aBc&quot;, code=923, and toParse=&quot;&lt;dont replace\nthis&gt;abcabc&lt;abcabcde&gt;&quot;, the method should return &quot;&lt;dont replace\nthis&gt;abcabc&lt;923923de&gt;&quot;.\nIf tagstring=&quot;table&quot;, code=1, and toParse=&quot;&lt;ta&gt;bLe&lt;TaBle\nwidth=100&gt;&lt;/table&gt;&lt;/ta&gt;&quot;, the method should return &quot;&lt;ta&gt;bLe&lt;1\nwidth=100&gt;&lt;/1&gt;&lt;/ta&gt;&quot;\n.\nIf tagstring=&quot;replace&quot;, code=323, and toParse=&quot;nothing inside&quot;, the method\nshould return &quot;nothing inside&quot;\n.\n</pre>",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"TCMLParser",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"replaceTag",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String, int, String",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"String",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"String replaceTag(String param0, int param1, String param2)",
			"order":5
		}
	],
	"examples":[],
	"constraints":[]
}