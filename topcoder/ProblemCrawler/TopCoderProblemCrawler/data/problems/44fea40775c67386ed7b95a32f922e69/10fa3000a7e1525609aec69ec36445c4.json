{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=7716&rd=10768",
	"statement":"You want to see some page on the teletext (information service on TV where we refer to pages of information by numbers). Unfortunately, some of the digit buttons on the remote control are broken. But you have an idea! If you can't enter the number of the page you want to see, you could enter some other number and with the buttons '+' and '-' (which are not broken) navigate to the desired page. Button '+' increases the number by 1 and button '-' decreases the number by 1. You are initially at page 100. To go to a different page, you may enter the page number using the digit buttons that aren't broken. Then, press the '+' and '-' buttons to navigate to your desired page.<br /><br /><br /><br /> You will be given an int <b>page</b>, the page you want to see, and a int[] <b>broken</b>, the list of broken digit buttons. Return the minimum number of button presses required to navigate to the <b>page</b>.<br /><br /><br /><br />",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"BrokenButtons",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"minPresses",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int[]",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int minPresses(int page, int[] broken)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"{ 6, 7, 8 }",
			"id":0,
			"input":"5457",
			"note":"You can go to page 5457 either by pressing \"5455++\" or \"5459--\".",
			"order":1
		},
		{
			"expect":"{ 1, 0, 5 }",
			"id":0,
			"input":"100",
			"note":"If you don't enter anything you'll get page 100.",
			"order":2
		},
		{
			"expect":"{ }",
			"id":0,
			"input":"14124",
			"note":"",
			"order":3
		},
		{
			"expect":"{1, 2, 3, 4, 5, 6, 7, 8, 9}",
			"id":0,
			"input":"1",
			"note":"We can enter page 0.",
			"order":4
		},
		{
			"expect":"{ 8, 9 }",
			"id":0,
			"input":"80000",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"page will be between 0 and 500,000, inclusive."
		},
		{
			"order":2,
			"val":"broken will contain between 0 and 10 elements, inclusive."
		},
		{
			"order":3,
			"val":"Each element of broken will be between 0 and 9, inclusive."
		},
		{
			"order":4,
			"val":"All elements of broken will be distinct."
		}
	]
}