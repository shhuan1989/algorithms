{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=6551&rd=9990",
	"statement":"<p> In meteorology, a common statistical tool is the <i>median</i> of a given set of measurements. (You can find a definition of the median in the Notes section.) </p> <p> You are writing software for a device that measures temperature once a second. The device has a small digital display. At any moment, the display has to show the median of temperatures measured in the last <b>K</b> seconds. </p> <p> Before you upload your software into the device, you would like to test it on a computer. </p> <p> Instead of measuring temperatures, we will use a random number generator (RNG) to generate fake temperatures. Given three ints <b>seed</b>, <b>mul</b> and <b>add</b>, we define a sequence of temperatures: </p> \n <ul> \n  <li> t<sub>0</sub> = <b>seed</b> </li> \n  <li> t<sub>k+1</sub> = (t<sub>k</sub> * <b>mul</b> + <b>add</b>) mod 65536 </li> \n </ul> <p> In addition to the parameters of the RNG, you will be given two ints <b>N</b> and <b>K</b>. </p> <p> Consider the sequence containing the first <b>N</b> temperatures generated by the RNG (i.e., values t<sub>0</sub> to t<sub>N-1</sub>). This sequence has <b>N</b>-<b>K</b>+1 contiguous subsequences of length <b>K</b>. For each such subsequence compute its median. </p> <p> Your method will be given the numbers <b>seed</b>, <b>mul</b>, <b>add</b>, <b>N</b>, and <b>K</b>. Compute all the medians as described above, and return a long containing their sum. </p> ",
	"notes":[{
		"order":1,
		"val":"Given  numbers, their median is the ((+1)/2)-th smallest of them, rounding down for even , and indexing from 1. For example, the median of (1, 2, 6, 5, 4, 3) is 3, and the median of (11, 13, 12, 14, 15) is 13."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"FloatingMedian",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"sumOfMedians",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"int, int, int, int, int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"long",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"long sumOfMedians(int seed, int mul, int add, int N, int K)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"1",
			"id":0,
			"input":"3",
			"note":"The generated temperatures are: 3, 4, 5, 6, 7, 8, 9, 10, 11, and 12. The length-3 contiguous subsequences are (3, 4, 5), (4, 5, 6), ..., and (10, 11, 12). Their medians are 4, 5, ..., 11. The sum of these medians is 4+5+...+11 = 60.",
			"order":1
		},
		{
			"expect":"0",
			"id":0,
			"input":"10",
			"note":"This time the generated temperatures are 10, 13, 13, 13, and 13. The medians you should compute are 10, 13, 13, and 13.",
			"order":2
		},
		{
			"expect":"2341",
			"id":0,
			"input":"4123",
			"note":"Generated temperatures: 4123, 19382, 23581, 23040, 1743, 18362, 60593.",
			"order":3
		},
		{
			"expect":"5621",
			"id":0,
			"input":"47",
			"note":"A quite large random test case.",
			"order":4
		},
		{
			"expect":"46543",
			"id":0,
			"input":"32321",
			"note":"Watch out for integer overflow when generating the temperatures.",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"seed, mul, and add are between 0 and 65535, inclusive."
		},
		{
			"order":2,
			"val":"N is between 1 and 250,000, inclusive."
		},
		{
			"order":3,
			"val":"K is between 1 and 5,000, inclusive."
		},
		{
			"order":4,
			"val":"N is greater than or equal to K."
		}
	]
}