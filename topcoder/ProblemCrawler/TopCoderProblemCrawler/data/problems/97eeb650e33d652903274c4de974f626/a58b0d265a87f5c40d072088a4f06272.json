{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=11339&rd=14433",
	"statement":"Stackol is a programming language for printing strings. A program is a string containing 'A', 'B' or 'C' as characters (quotes for clarity). A program is evaluated from i = 0 to length(program)-1 using the following rules:<br /><br /> <br /><br /> <pre>\nFor i = 0 to length(program)-1 :\n    If (i==0) or (program[i-1]!='B') then\n        push program[i] to the top of stack1.\n    Else\n        push program[i] to the top of stack2.\n    EndIf\n    If (program[i]=='C') then \n        printAndEmptyStack(stack1)\n        printAndEmptyStack(stack2)\n    EndIf\nEndFor</pre><br /><br /> printAndEmptyStack(stack) is defined as follows:<br /><br /><br /><br /> <pre>\nWhile (stack is not empty):\n    If (top character in stack) is 'A' or 'B' then\n        Print (top character in stack)\n    EndIf\n    Remove the top character from the stack.\nEndWhile\n</pre> <br /><br /> We will consider a valid program to be one that ends with 'C'. We are interested in counting the total number of valid programs that can generate a given <i>output</i> string that contains only 'A' or 'B' characters. Since we would also like the program lengths to be reasonably small we will count only the programs that contain at most <b>k</b> 'C' characters.<br /><br /> <br /><br /> The <i>output</i> is given in fragments described by String[] <b>outputFragments</b>. In order to generate the <i>output</i>, concatenate the elements of <b>outputFragments</b>. Return the total number of programs that can generate the given <i>output</i> using at most <b>k</b> 'C' characters modulo 1000000007.",
	"notes":[],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"Stackol",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"countPrograms",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String[], int",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int countPrograms(String[] outputFragments, int k)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"2",
			"id":0,
			"input":"{\"A\"}",
			"note":"The 3 programs that produce \"A\" as output are:   ",
			"order":1
		},
		{
			"expect":"1",
			"id":0,
			"input":"{\"AAAA\",\"BABA\"}",
			"note":"There is no program that produces the given output.",
			"order":2
		},
		{
			"expect":"2",
			"id":0,
			"input":"{\"AB\"}",
			"note":"The only possible program that can generate \"AB\" using at most two 'C' characters is: ACBC.",
			"order":3
		},
		{
			"expect":"3",
			"id":0,
			"input":"{\"AAABABABAABA\", \"AA\", \"BBAB\"}",
			"note":"",
			"order":4
		},
		{
			"expect":"4",
			"id":0,
			"input":"{\"AAAAAAAAAAAA\",\"B\"}",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"The total number of characters in outputFragments will be between 1 and 2500, inclusive."
		},
		{
			"order":2,
			"val":"outputFragments will contain between 1 and 50 elements, inclusive."
		},
		{
			"order":3,
			"val":"Each element of outputFragments will contain between 1 and 50 characters, inclusive."
		},
		{
			"order":4,
			"val":"Each element of outputFragments will contain only 'A' or 'B' characters."
		},
		{
			"order":5,
			"val":"k will be between 1 and 10, inclusive."
		}
	]
}