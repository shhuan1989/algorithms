{
	"link":"http://community.topcoder.com/stat?c=problem_statement&pm=12516&rd=16016",
	"statement":"<p> You are given a String <b>S</b>. The string can have up to 2500 characters. </p> <p> You have to reverse exactly one substring of <b>S</b>. Formally, you have to choose two 0-based indices {x,y} such that x &lt;= y, and then you have to reverse the order of the letters with indices x through y, inclusive. That is, <b>S</b>[x]<b>S</b>[x+1]...<b>S</b>[y] becomes <b>S</b>[y]...<b>S</b>[x+1]<b>S</b>[x]. </p> <p> For example, if <b>S</b>=&quot;abcdefg&quot;, you can choose the indices {2,5} to obtain &quot;abfedcg&quot;, the indices {0,1} to obtain &quot;bacdefg&quot;, or the indices {3,3} to obtain &quot;abcdefg&quot;. (In the last example, only one letter was selected, so the string did not change.) </p> <p> Your goal is to produce the lexicographically smallest string possible. Return a int[] containing two elements: the optimal indices x and y. If there are multiple optimal choices, find the one with the smallest x. If there are still multiple optimal choices, find the one with the smallest y. </p>",
	"notes":[{
		"order":1,
		"val":"Given two strings A and B of equal length, we say that A is lexicographically smaller than B if A has a smaller character than B at the first position where they differ."
	}],
	"definition":[
		{
			"definitionKey":"Class:",
			"definitionVal":"SubstringReversal",
			"order":1
		},
		{
			"definitionKey":"Method:",
			"definitionVal":"solve",
			"order":2
		},
		{
			"definitionKey":"Parameters:",
			"definitionVal":"String",
			"order":3
		},
		{
			"definitionKey":"Returns:",
			"definitionVal":"int[]",
			"order":4
		},
		{
			"definitionKey":"Method signature:",
			"definitionVal":"int[] solve(String S)",
			"order":5
		}
	],
	"examples":[
		{
			"expect":"Returns: {2, 3 }",
			"id":0,
			"input":"\"abdc\"",
			"note":"Reverse \"dc\" to \"cd\".",
			"order":1
		},
		{
			"expect":"Returns: {0, 0 }",
			"id":0,
			"input":"\"aabbcc\"",
			"note":"Nothing to reverse here, you cannot produce a lexicographically smaller string.",
			"order":2
		},
		{
			"expect":"Returns: {0, 4 }",
			"id":0,
			"input":"\"misof\"",
			"note":"Reverse the entire string.",
			"order":3
		},
		{
			"expect":"Returns: {0, 2 }",
			"id":0,
			"input":"\"ivan\"",
			"note":"Reverse \"iva\" to bring 'a' to the beginning.",
			"order":4
		},
		{
			"expect":"Returns: {0, 13 }",
			"id":0,
			"input":"\"thisseemstobeaneasyproblem\"",
			"note":"",
			"order":5
		}
	],
	"constraints":[
		{
			"order":1,
			"val":"S will contain between 1 and 2500 elements, inclusive."
		},
		{
			"order":2,
			"val":"Each character of S will be a lowercase letter ('a'-'z')."
		}
	]
}